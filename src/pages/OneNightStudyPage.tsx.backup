import { useEffect, useMemo, useState } from 'react'

type Topic = {
  grade: number
  subject: string
  title: string
  bullets: string[]
}

type MCQ = {
  question: string
  options: string[]
  correct: number
  explanation: string
}

type LearningModule = {
  title: string
  introduction: string
  concepts: {
    title: string
    content: string
    examples: string[]
  }[]
  mcqs: MCQ[]
}

const integersModule: LearningModule = {
  title: 'Integers',
  introduction: 'Welcome to the world of integers! Integers are whole numbers that can be positive, negative, or zero. They help us understand quantities that can go in opposite directions, like temperature above and below freezing, or money earned and spent.',
  concepts: [
    {
      title: 'Representation on a Number Line',
      content: 'A number line helps us visualize integers. Zero is in the middle, positive numbers go to the right, and negative numbers go to the left.',
      examples: [
        'Draw a horizontal line with arrows on both ends',
        'Mark zero (0) in the middle',
        'Mark positive numbers to the right: 1, 2, 3, 4...',
        'Mark negative numbers to the left: -1, -2, -3, -4...',
        'The distance between any two consecutive integers is always 1 unit'
      ]
    },
    {
      title: 'Absolute Value',
      content: 'The absolute value of a number is its distance from zero on the number line, regardless of direction. It\'s always positive or zero.',
      examples: [
        '|5| = 5 (5 units from zero)',
        '|-5| = 5 (5 units from zero)',
        '|0| = 0 (zero is at zero)',
        '|-10| = 10 (10 units from zero)',
        'Think of it as "how far" without caring about direction'
      ]
    },
    {
      title: 'Comparing and Ordering Integers',
      content: 'When comparing integers, remember: numbers to the right on the number line are greater than numbers to the left.',
      examples: [
        '5 > 3 (5 is to the right of 3)',
        '-2 > -5 (-2 is to the right of -5)',
        '0 > -3 (0 is to the right of -3)',
        'Ordering from least to greatest: -5, -2, 0, 3, 5',
        'Ordering from greatest to least: 5, 3, 0, -2, -5'
      ]
    },
    {
      title: 'Operations on Integers - Addition',
      content: 'Adding integers: Same signs add and keep the sign, different signs subtract and keep the sign of the larger number.',
      examples: [
        'Same signs: 5 + 3 = 8, -5 + (-3) = -8',
        'Different signs: 5 + (-3) = 2, -5 + 3 = -2',
        'With zero: 5 + 0 = 5, -5 + 0 = -5',
        'Real example: Temperature rose 3°C from -2°C: -2 + 3 = 1°C'
      ]
    },
    {
      title: 'Operations on Integers - Subtraction',
      content: 'Subtracting integers: Change subtraction to addition of the opposite, then follow addition rules.',
      examples: [
        '5 - 3 = 5 + (-3) = 2',
        '5 - (-3) = 5 + 3 = 8',
        '-5 - 3 = -5 + (-3) = -8',
        '-5 - (-3) = -5 + 3 = -2',
        'Real example: Temperature dropped 4°C from 2°C: 2 - 4 = 2 + (-4) = -2°C'
      ]
    },
    {
      title: 'Operations on Integers - Multiplication',
      content: 'Multiplying integers: Same signs give positive, different signs give negative.',
      examples: [
        'Same signs: 3 × 4 = 12, (-3) × (-4) = 12',
        'Different signs: 3 × (-4) = -12, (-3) × 4 = -12',
        'With zero: 5 × 0 = 0, (-5) × 0 = 0',
        'Real example: Losing 3 points per wrong answer for 4 wrong answers: (-3) × 4 = -12 points'
      ]
    },
    {
      title: 'Operations on Integers - Division',
      content: 'Dividing integers: Same signs give positive, different signs give negative.',
      examples: [
        'Same signs: 12 ÷ 3 = 4, (-12) ÷ (-3) = 4',
        'Different signs: 12 ÷ (-3) = -4, (-12) ÷ 3 = -4',
        'With zero: 0 ÷ 5 = 0 (but 5 ÷ 0 is undefined!)',
        'Real example: Sharing -15 points equally among 3 people: (-15) ÷ 3 = -5 points each'
      ]
    },
    {
      title: 'Properties of Integer Operations',
      content: 'Integers follow important properties that make calculations easier.',
      examples: [
        'Commutative Property: 3 + 5 = 5 + 3, 3 × 5 = 5 × 3',
        'Associative Property: (2 + 3) + 4 = 2 + (3 + 4)',
        'Distributive Property: 3 × (2 + 4) = 3 × 2 + 3 × 4',
        'Identity Property: 5 + 0 = 5, 5 × 1 = 5',
        'These properties work with negative numbers too!'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the absolute value of -7?',
      options: ['-7', '7', '0', '14'],
      correct: 1,
      explanation: 'The absolute value of -7 is 7 because it is 7 units away from zero on the number line, regardless of direction.'
    },
    {
      question: 'Which is greater: -5 or -2?',
      options: ['-5', '-2', 'They are equal', 'Cannot be determined'],
      correct: 1,
      explanation: '-2 is greater than -5 because -2 is to the right of -5 on the number line.'
    },
    {
      question: 'What is 8 + (-3)?',
      options: ['11', '5', '-5', '-11'],
      correct: 1,
      explanation: '8 + (-3) = 5. When adding integers with different signs, subtract the smaller absolute value from the larger one and keep the sign of the number with the larger absolute value.'
    },
    {
      question: 'What is (-4) × 6?',
      options: ['24', '-24', '10', '-10'],
      correct: 1,
      explanation: '(-4) × 6 = -24. When multiplying integers with different signs, the result is negative.'
    },
    {
      question: 'What is 15 ÷ (-3)?',
      options: ['5', '-5', '45', '-45'],
      correct: 1,
      explanation: '15 ÷ (-3) = -5. When dividing integers with different signs, the result is negative.'
    }
  ]
}

// Comprehensive Fractions and Decimals Learning Module for 6th Grade
const fractionsDecimalsModule: LearningModule = {
  title: 'Fractions and Decimals',
  introduction: 'Welcome to the amazing world of fractions and decimals! These special number forms help us represent parts of a whole and make calculations easier. Whether you\'re sharing a pizza with friends, measuring ingredients for baking, or calculating your test scores, fractions and decimals are essential tools in math and daily life. Get ready to master these concepts step by step!',
  concepts: [
    {
      title: 'Understanding and Simplifying Fractions',
      content: 'A fraction represents a part of a whole, with the numerator (top) showing how many parts we have and the denominator (bottom) showing the total equal parts. Simplifying fractions means reducing them to their smallest form by finding the Greatest Common Factor (GCF).',
      examples: [
        'Fraction basics: 3/4 means 3 out of 4 equal parts',
        'To simplify 6/8: Find GCF of 6 and 8 (which is 2), then divide: 6÷2 = 3, 8÷2 = 4, so 6/8 = 3/4',
        'Simplifying 12/16: GCF is 4, so 12÷4 = 3, 16÷4 = 4, giving us 3/4',
        'Always check if a fraction can be simplified: 5/10 = 1/2, 9/12 = 3/4',
        'Proper fractions (numerator < denominator): 2/3, 5/8, 7/10'
      ]
    },
    {
      title: 'Comparing Fractions',
      content: 'Comparing fractions helps us determine which is larger or smaller. We can use cross multiplication, convert to decimals, or find common denominators.',
      examples: [
        'Same denominators: 2/5 < 3/5 (compare numerators when denominators are equal)',
        'Cross multiplication: Compare 2/3 and 3/4 → 2×4 = 8, 3×3 = 9, so 8 < 9 means 2/3 < 3/4',
        'Common denominators: 1/2 vs 2/3 → 3/6 vs 4/6, so 1/2 < 2/3',
        'Convert to decimals: 3/4 = 0.75, 4/5 = 0.8, so 3/4 < 4/5',
        'Visual comparison: Draw circles and shade the fractions to see which is larger'
      ]
    },
    {
      title: 'Converting Between Fractions and Decimals',
      content: 'Converting between fractions and decimals helps us work with numbers in the most convenient form for different situations.',
      examples: [
        'Fraction to decimal: Divide numerator by denominator: 3/4 = 3 ÷ 4 = 0.75',
        'Decimal to fraction: 0.6 = 6/10 = 3/5 (simplified)',
        'Common conversions: 1/2 = 0.5, 1/4 = 0.25, 3/4 = 0.75, 1/5 = 0.2',
        'Repeating decimals: 1/3 = 0.333... (write as 0.3̄), 2/3 = 0.666... (write as 0.6̄)',
        'Place value method: 0.125 = 125/1000 = 1/8 (simplified)'
      ]
    },
    {
      title: 'Adding and Subtracting Fractions Using LCM',
      content: 'To add or subtract fractions with different denominators, find the Least Common Multiple (LCM) of the denominators to create equivalent fractions with the same denominator.',
      examples: [
        'Same denominators: 2/7 + 3/7 = 5/7 (just add numerators)',
        'Different denominators: 1/4 + 1/6 → LCM of 4 and 6 is 12',
        'Convert to common denominator: 1/4 = 3/12, 1/6 = 2/12, so 3/12 + 2/12 = 5/12',
        'Subtraction example: 3/4 - 1/3 → LCM of 4 and 3 is 12 → 9/12 - 4/12 = 5/12',
        'Finding LCM: List multiples of each denominator and find the smallest common one'
      ]
    },
    {
      title: 'Multiplying Fractions',
      content: 'Multiplying fractions is straightforward: multiply the numerators together and multiply the denominators together. Then simplify the result if possible.',
      examples: [
        'Basic multiplication: 2/3 × 1/4 = (2×1)/(3×4) = 2/12 = 1/6',
        'With whole numbers: 3 × 2/5 = 3/1 × 2/5 = 6/5 = 1 1/5',
        'Cross-canceling saves time: 2/3 × 3/8 = (2×3)/(3×8), cancel the 3s = 2/8 = 1/4',
        'Mixed numbers: Convert to improper fractions first: 1 1/2 × 2/3 = 3/2 × 2/3 = 6/6 = 1',
        'Real-life example: 2/3 of 3/4 cup of flour = 2/3 × 3/4 = 6/12 = 1/2 cup'
      ]
    },
    {
      title: 'Dividing Fractions',
      content: 'To divide fractions, multiply by the reciprocal (flip) of the second fraction. Remember the rule: "Keep, Change, Flip" - keep the first fraction, change division to multiplication, flip the second fraction.',
      examples: [
        'Basic division: 1/2 ÷ 1/4 = 1/2 × 4/1 = 4/2 = 2',
        'Think of it as: "How many 1/4s fit into 1/2?" Answer: 2',
        'Another example: 3/4 ÷ 2/3 = 3/4 × 3/2 = 9/8 = 1 1/8',
        'Dividing by whole numbers: 2/3 ÷ 4 = 2/3 × 1/4 = 2/12 = 1/6',
        'Real-life: If 3/4 cup serves 2 people, how much per person? 3/4 ÷ 2 = 3/4 × 1/2 = 3/8 cup'
      ]
    },
    {
      title: 'Adding and Subtracting Decimals',
      content: 'Adding and subtracting decimals is like working with whole numbers, but you must carefully line up the decimal points to keep place values correct.',
      examples: [
        'Line up decimal points: 3.45 + 2.78 = 6.23',
        'Different decimal places: 4.5 + 2.367 = 4.500 + 2.367 = 6.867',
        'Subtraction: 5.82 - 3.47 = 2.35',
        'With zeros: 8.0 - 3.456 = 8.000 - 3.456 = 4.544',
        'Money example: $12.50 + $7.95 = $20.45'
      ]
    },
    {
      title: 'Multiplying and Dividing Decimals',
      content: 'Multiplying decimals follows the same steps as whole numbers, but you must count decimal places to place the decimal point correctly in the answer. For division, move decimal points to make the divisor a whole number.',
      examples: [
        'Multiplying: 2.5 × 1.4 = 3.5 (1 decimal place + 1 decimal place = 2 decimal places)',
        'More decimals: 0.25 × 0.8 = 0.200 = 0.2',
        'Dividing by decimals: 6.4 ÷ 0.8 = 64 ÷ 8 = 8 (move decimal point in both numbers)',
        'Division example: 12.6 ÷ 3 = 4.2',
        'Real-life: 3 items cost $7.50, so each costs $7.50 ÷ 3 = $2.50'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is 8/12 in simplest form?',
      options: ['4/6', '2/3', '8/12', '1/2'],
      correct: 1,
      explanation: 'To simplify 8/12, find the GCF of 8 and 12, which is 4. Divide both: 8÷4 = 2, 12÷4 = 3, so 8/12 = 2/3.'
    },
    {
      question: 'Which fraction is larger: 3/4 or 5/6?',
      options: ['3/4', '5/6', 'They are equal', 'Cannot determine'],
      correct: 1,
      explanation: 'Using cross multiplication: 3×6 = 18, 5×4 = 20. Since 20 > 18, we have 5/6 > 3/4.'
    },
    {
      question: 'What is 0.375 as a fraction in simplest form?',
      options: ['375/1000', '3/8', '37/100', '15/40'],
      correct: 1,
      explanation: '0.375 = 375/1000. Simplifying by dividing by 125: 375÷125 = 3, 1000÷125 = 8, so 0.375 = 3/8.'
    },
    {
      question: 'What is 1/3 + 1/4 using LCM?',
      options: ['2/7', '4/12', '7/12', '1/2'],
      correct: 2,
      explanation: 'LCM of 3 and 4 is 12. Convert: 1/3 = 4/12, 1/4 = 3/12. Then 4/12 + 3/12 = 7/12.'
    },
    {
      question: 'What is 2/3 × 3/4?',
      options: ['6/12', '1/2', '5/7', '2/4'],
      correct: 1,
      explanation: '2/3 × 3/4 = (2×3)/(3×4) = 6/12 = 1/2. You can also cross-cancel: the 3s cancel out, leaving 2/4 = 1/2.'
    },
    {
      question: 'What is 3/4 ÷ 1/2?',
      options: ['3/8', '1/2', '3/2', '6/4'],
      correct: 2,
      explanation: 'To divide fractions, multiply by the reciprocal: 3/4 ÷ 1/2 = 3/4 × 2/1 = 6/4 = 3/2 = 1 1/2.'
    },
    {
      question: 'What is 4.56 + 2.789?',
      options: ['7.349', '6.345', '7.245', '6.149'],
      correct: 0,
      explanation: 'Line up decimal points: 4.560 + 2.789 = 7.349. Make sure to add each place value column correctly.'
    },
    {
      question: 'What is 2.4 × 1.5?',
      options: ['3.6', '3.9', '4.1', '3.5'],
      correct: 0,
      explanation: '2.4 × 1.5 = 3.60 = 3.6. Count decimal places: 1 + 1 = 2 decimal places in the answer.'
    },
    {
      question: 'What is 7.2 ÷ 0.8?',
      options: ['8', '9', '0.9', '90'],
      correct: 1,
      explanation: 'Move decimal point to make divisor whole: 7.2 ÷ 0.8 = 72 ÷ 8 = 9.'
    },
    {
      question: 'Which is equivalent to 0.6?',
      options: ['6/10 only', '3/5 only', '12/20 only', 'All of the above'],
      correct: 3,
      explanation: '0.6 = 6/10 = 3/5 (simplified). Also 12/20 = 3/5 when simplified. All three fractions are equivalent to 0.6.'
    }
  ]
};

// Word Processor Tabular Presentation Learning Module for 6th Grade
const wordProcessorTablesModule: LearningModule = {
  title: 'Word Processor – Tabular Presentation',
  introduction: 'Welcome to the exciting world of tables in word processors! Tables are like digital organizing tools that help us arrange information in neat rows and columns, just like a well-organized classroom or library. Whether you\'re creating a class schedule, organizing your favorite books, or presenting sports scores, tables make information easy to read and understand. Let\'s discover how to create and work with tables!',
  concepts: [
    {
      title: 'What is a Table?',
      content: 'A table is a way to organize information using rows and columns. Think of it like a grid where each box (called a cell) can hold different pieces of information. Tables help us compare and organize data clearly.',
      examples: [
        'A table has rows (horizontal lines) and columns (vertical lines)',
        'Where a row and column meet, we get a cell - like a box to put information',
        'Example: A class schedule table has days as columns and time periods as rows',
        'Each cell contains specific information, like "Math" or "Science"',
        'Tables make it easy to find information quickly'
      ]
    },
    {
      title: 'Why Do We Use Tables?',
      content: 'Tables are super helpful for organizing and presenting information in a clear way. They make it easy to compare data and find specific information quickly.',
      examples: [
        'Class schedules showing subjects for different days',
        'Price lists for items in a store',
        'Sports team statistics and scores',
        'Comparing features of different products',
        'Organizing contact information for friends and family'
      ]
    },
    {
      title: 'Creating a Table',
      content: 'Creating a table in a word processor is easy! Most word processors have a special button or menu option for tables. You can choose how many rows and columns you want.',
      examples: [
        'Click on the "Table" option in the menu or toolbar',
        'Select "Insert Table" from the dropdown menu',
        'Choose the number of rows and columns you need',
        'Click "OK" or "Insert" to create your table',
        'Your empty table will appear in your document, ready to fill with information'
      ]
    },
    {
      title: 'Adding Content to Tables',
      content: 'Once you have your table, you can add text, numbers, or other content to each cell. Just click on a cell and start typing! You can move between cells using the Tab key or arrow keys.',
      examples: [
        'Click on a cell to select it and type your information',
        'Press Tab to move to the next cell',
        'Press Shift+Tab to move to the previous cell',
        'Use arrow keys to navigate between cells',
        'You can copy and paste content into cells too'
      ]
    },
    {
      title: 'Editing Table Structure',
      content: 'Sometimes you need to change your table after you\'ve created it. You might need more rows or columns, or you might want to combine cells or split them apart.',
      examples: [
        'Insert row: Right-click and select "Insert" then "Row Above" or "Row Below"',
        'Insert column: Right-click and select "Insert" then "Column Left" or "Column Right"',
        'Delete row/column: Right-click and select "Delete Rows" or "Delete Columns"',
        'Merge cells: Select multiple cells, right-click, and select "Merge Cells"',
        'Split cells: Select a cell, right-click, and select "Split Cells"'
      ]
    },
    {
      title: 'Merging and Splitting Cells',
      content: 'Sometimes you need bigger cells for headings or to organize your information better. You can merge cells (combine them) or split them (divide into smaller cells).',
      examples: [
        'To merge cells: Select multiple cells, right-click, and choose "Merge Cells"',
        'Merged cells are great for table titles or headings that need to span multiple columns',
        'To split a cell: Right-click on a cell and choose "Split Cell"',
        'You can split cells into more rows or columns',
        'This is useful when you need to add more detailed information in a specific part of your table'
      ]
    },
    {
      title: 'Formatting Tables',
      content: 'Make your tables look great by adding colors, borders, and changing text styles. Most word processors let you customize how your table looks.',
      examples: [
        'Add borders to make cells stand out',
        'Change background colors for headers or important cells',
        'Make header text bold or a different color',
        'Adjust column width by dragging the column edges',
        'Change text alignment (left, center, right) within cells'
      ]
    },
    {
      title: 'Advantages of Using Tables',
      content: 'Tables have many benefits that make them perfect for organizing and presenting information in school projects and reports.',
      examples: [
        'Makes information easy to read and understand',
        'Helps compare data quickly',
        'Keeps information organized and neat',
        'Saves space compared to writing everything in paragraphs',
        'Makes your work look professional and well-organized'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the intersection of a row and column in a table called?',
      options: ['Grid', 'Box', 'Cell', 'Square'],
      correct: 2,
      explanation: 'A cell is the box or space where a row and column intersect in a table. This is where you put your information.'
    },
    {
      question: 'Which direction do rows run in a table?',
      options: ['Top to bottom', 'Left to right', 'Diagonally', 'In circles'],
      correct: 1,
      explanation: 'Rows run horizontally from left to right across the table.'
    },
    {
      question: 'Which direction do columns run in a table?',
      options: ['Left to right', 'Top to bottom', 'Diagonally', 'In zigzags'],
      correct: 1,
      explanation: 'Columns run vertically from top to bottom in a table.'
    },
    {
      question: 'Which key can you press to move to the next cell in a table?',
      options: ['Enter', 'Space', 'Tab', 'Shift'],
      correct: 2,
      explanation: 'The Tab key moves your cursor to the next cell in a table. This makes it easy to fill in your table quickly.'
    },
    {
      question: 'What happens when you merge cells in a table?',
      options: ['The cells get deleted', 'The cells become one larger cell', 'The cells change color', 'The cells get smaller'],
      correct: 1,
      explanation: 'When you merge cells, multiple cells combine to become one larger cell that spans multiple rows or columns.'
    },
    {
      question: 'Which of these would be BEST to present in a table?',
      options: ['A long story', 'A poem', 'Weekly test scores for students', 'A letter to a friend'],
      correct: 2,
      explanation: 'Weekly test scores for students is perfect for a table because you can organize scores by student name and test date, making it easy to compare and find information.'
    },
    {
      question: 'What is the first step to create a table in most word processors?',
      options: ['Save the document', 'Click on the Table option in the menu', 'Turn off the computer', 'Delete all text'],
      correct: 1,
      explanation: 'To create a table, you first need to click on the Table option in the menu or toolbar, which will show you table creation options.'
    },
    {
      question: 'How can you make table headers stand out?',
      options: ['Delete them', 'Make them bold or add background color', 'Make the text very small', 'Remove all borders'],
      correct: 1,
      explanation: 'You can make headers stand out by formatting them differently, such as making the text bold or adding a background color to those cells.'
    },
    {
      question: 'What is an advantage of using tables to present information?',
      options: ['They make information harder to find', 'They use more paper than paragraphs', 'They make information easier to read and compare', 'They can only contain numbers'],
      correct: 2,
      explanation: 'Tables make information easier to read and compare because they organize data in a structured format with rows and columns.'
    },
    {
      question: 'What can you put in a table cell?',
      options: ['Only numbers', 'Only text', 'Only pictures', 'Text, numbers, or pictures'],
      correct: 3,
      explanation: 'Table cells are versatile and can contain text, numbers, or even pictures, making them useful for many different types of information.'
    }
  ]
};

// Electricity and Circuits Learning Module for 6th Grade
const electricityCircuitsModule: LearningModule = {
  title: 'Electricity and Circuits',
  introduction: 'Welcome to the amazing world of electricity! Electricity is all around us - from the lights in your room to the computer you use. It\'s like an invisible helper that powers our modern world. Understanding electricity and circuits will help you see how many things work and keep you safe around electrical devices. Let\'s explore this fascinating topic together!',
  concepts: [
    {
      title: 'What is Electricity?',
      content: 'Electricity is a form of energy that results from the movement of tiny particles called electrons. Electric current is the flow of these electrons through materials, just like water flowing through a pipe.',
      examples: [
        'Electricity is created when electrons move from one place to another',
        'Electric current is measured in units called amperes (amps)',
        'Think of electricity like water flowing through pipes - the water is like electrons, and the pipes are like wires',
        'Lightning is a natural form of electricity where electrons jump through the air',
        'Static electricity happens when electrons build up in one place, like when you rub a balloon on your hair'
      ]
    },
    {
      title: 'Components of an Electric Circuit',
      content: 'An electric circuit is a complete path that allows electricity to flow. It has four main components that work together to make electricity useful.',
      examples: [
        'Source: Provides the electrical energy (like a battery or power outlet)',
        'Conductor: Allows electricity to flow through it (like copper wires)',
        'Load: Uses the electrical energy to do work (like a light bulb or motor)',
        'Switch: Controls whether electricity can flow or not (like a light switch)',
        'All components must be connected in a complete loop for electricity to flow'
      ]
    },
    {
      title: 'Series Circuits',
      content: 'In a series circuit, all components are connected in a single path, one after another. The same electric current flows through each component.',
      examples: [
        'Components are connected like links in a chain',
        'If one component breaks, the whole circuit stops working',
        'Christmas lights often use series circuits - if one bulb burns out, all lights go off',
        'The brightness of bulbs decreases as you add more bulbs to the circuit',
        'Current is the same everywhere in a series circuit'
      ]
    },
    {
      title: 'Parallel Circuits',
      content: 'In a parallel circuit, components are connected on separate branches. Each component has its own path for electricity to flow.',
      examples: [
        'Each component is connected on its own separate branch',
        'If one component breaks, the others continue to work',
        'House wiring uses parallel circuits - if one light burns out, others stay on',
        'Each bulb gets the full voltage and shines at full brightness',
        'Different branches can have different amounts of current'
      ]
    },
    {
      title: 'Conductors vs Insulators',
      content: 'Materials can be classified based on how well they allow electricity to flow through them. This property is very important for safety and circuit design.',
      examples: [
        'Conductors: Allow electricity to flow easily (copper, aluminum, gold, silver)',
        'Insulators: Do not allow electricity to flow easily (rubber, plastic, glass, wood)',
        'Wires are made of conductors (copper) covered with insulators (plastic coating)',
        'Our body can conduct electricity, which is why we need to be careful',
        'Air is usually an insulator, but lightning can jump through it'
      ]
    },
    {
      title: 'Electrical Safety Rules',
      content: 'Electricity can be dangerous if not handled properly. Following safety rules protects us from electric shock, burns, and fires.',
      examples: [
        'Never touch electrical outlets or switches with wet hands',
        'Don\'t put metal objects into electrical outlets',
        'Unplug devices by pulling the plug, not the cord',
        'Tell an adult immediately if you see damaged wires or sparks',
        'Stay away from power lines and electrical substations',
        'Use electrical devices only as they were designed to be used'
      ]
    },
    {
      title: 'How Circuits Work in Daily Life',
      content: 'Electric circuits are everywhere in our daily lives, making our modern lifestyle possible. Understanding them helps us use technology better.',
      examples: [
        'Your home has many parallel circuits for different rooms and appliances',
        'Flashlights use simple series circuits with batteries, switch, and bulb',
        'Cars have complex circuits for lights, radio, air conditioning, and engine control',
        'Mobile phones have tiny, complex circuits with millions of components',
        'Even simple toys often contain basic circuits for lights or sounds'
      ]
    },
    {
      title: 'Fun Facts About Electricity',
      content: 'Electricity has many interesting properties and plays amazing roles in nature and technology.',
      examples: [
        'Electric eels can generate up to 600 volts of electricity for defense',
        'Your brain uses electrical signals to control your body',
        'The heart beats using electrical impulses that doctors can measure',
        'Solar panels convert sunlight directly into electricity',
        'Some fish can sense electrical fields to navigate and hunt'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is electric current?',
      options: ['The speed of light', 'The flow of electrons through a material', 'The amount of heat produced', 'The brightness of a bulb'],
      correct: 1,
      explanation: 'Electric current is the flow of electrons through a material, like water flowing through a pipe.'
    },
    {
      question: 'Which component provides electrical energy in a circuit?',
      options: ['Switch', 'Wire', 'Source (like a battery)', 'Load'],
      correct: 2,
      explanation: 'The source, such as a battery or power outlet, provides the electrical energy that powers the circuit.'
    },
    {
      question: 'In a series circuit, what happens if one bulb burns out?',
      options: ['Other bulbs get brighter', 'Other bulbs stay the same', 'All bulbs stop working', 'Only half the bulbs stop working'],
      correct: 2,
      explanation: 'In a series circuit, all components are connected in one path, so if one component fails, the entire circuit stops working.'
    },
    {
      question: 'Which type of circuit is used in house wiring?',
      options: ['Series circuit', 'Parallel circuit', 'Both equally', 'Neither'],
      correct: 1,
      explanation: 'House wiring uses parallel circuits so that each appliance can work independently - if one device breaks, others continue to work.'
    },
    {
      question: 'Which of these is a good conductor of electricity?',
      options: ['Rubber', 'Plastic', 'Copper', 'Glass'],
      correct: 2,
      explanation: 'Copper is an excellent conductor of electricity, which is why it\'s commonly used in electrical wires.'
    },
    {
      question: 'Which of these is an insulator?',
      options: ['Aluminum', 'Gold', 'Rubber', 'Silver'],
      correct: 2,
      explanation: 'Rubber is an insulator that does not allow electricity to flow easily, which is why it\'s used to cover electrical wires for safety.'
    },
    {
      question: 'What should you never do with electrical outlets?',
      options: ['Use them to power devices', 'Turn them off with switches', 'Touch them with wet hands', 'Keep them clean'],
      correct: 2,
      explanation: 'Never touch electrical outlets with wet hands because water makes your body a better conductor, increasing the risk of electric shock.'
    },
    {
      question: 'What controls whether electricity flows in a circuit?',
      options: ['Wire', 'Battery', 'Switch', 'Light bulb'],
      correct: 2,
      explanation: 'A switch controls whether electricity can flow in a circuit by opening or closing the electrical path.'
    },
    {
      question: 'In a parallel circuit, each component receives:',
      options: ['Half the voltage', 'No voltage', 'The full voltage', 'Double voltage'],
      correct: 2,
      explanation: 'In a parallel circuit, each component is connected directly to the source, so each receives the full voltage.'
    },
    {
      question: 'What makes lightning possible?',
      options: ['Rain falling', 'Electrons jumping through air', 'Wind blowing', 'Clouds moving'],
      correct: 1,
      explanation: 'Lightning occurs when electrons build up in clouds and then jump through the air to the ground, creating a massive electrical discharge.'
    }
  ]
};

// Our Body and Health Learning Module for 6th Grade
const bodyHealthModule: LearningModule = {
  title: 'Our Body and Health',
  introduction: 'Welcome to the incredible journey of discovering your amazing body! Your body is like a super-advanced machine with many systems working together 24/7 to keep you alive, healthy, and active. From the food you eat to the air you breathe, every part of your body has an important job. Let\'s explore how to take care of this wonderful machine and keep it running at its best!',
  concepts: [
    {
      title: 'Human Body Systems Overview',
      content: 'Your body has several amazing systems that work together like a perfect team. Each system has a special job, but they all depend on each other to keep you healthy.',
      examples: [
        'Digestive System: Breaks down food and absorbs nutrients for energy',
        'Circulatory System: Pumps blood to carry oxygen and nutrients throughout your body',
        'Respiratory System: Takes in oxygen and removes carbon dioxide from your body',
        'Excretory System: Removes waste products from your body',
        'Nervous System: Controls your body and helps you think, feel, and react',
        'Skeletal System: Provides structure, protects organs, and helps you move'
      ]
    },
    {
      title: 'The Importance of Good Health and Hygiene',
      content: 'Good health means your body systems are working well together. Good hygiene helps prevent diseases and keeps you feeling fresh and confident.',
      examples: [
        'Brush your teeth twice daily to prevent tooth decay and gum disease',
        'Wash your hands regularly, especially before eating and after using the bathroom',
        'Take regular baths or showers to keep your skin clean and healthy',
        'Keep your nails clean and trimmed to prevent bacteria buildup',
        'Wear clean clothes and change them regularly',
        'Get enough sleep (8-10 hours) to help your body rest and repair itself'
      ]
    },
    {
      title: 'Balanced Diet and Nutrients',
      content: 'A balanced diet provides all the nutrients your body needs to grow, repair itself, and have energy. Think of nutrients as the fuel and building materials for your body.',
      examples: [
        'Carbohydrates: Provide quick energy (rice, bread, fruits)',
        'Proteins: Build and repair muscles and tissues (meat, fish, beans, eggs)',
        'Fats: Provide long-lasting energy and help absorb vitamins (nuts, oils, dairy)',
        'Vitamins: Help your body function properly (fruits, vegetables)',
        'Minerals: Keep bones, teeth, and blood healthy (milk, leafy greens)',
        'Water: Helps all body processes and keeps you hydrated (drink 6-8 glasses daily)'
      ]
    },
    {
      title: 'Understanding Diseases and Prevention',
      content: 'Diseases happen when something goes wrong in your body systems. Many diseases can be prevented by making healthy choices and following good hygiene practices.',
      examples: [
        'Infectious diseases spread from person to person (cold, flu) - prevent with handwashing and covering coughs',
        'Lifestyle diseases develop from poor habits (obesity, diabetes) - prevent with healthy diet and exercise',
        'Deficiency diseases occur when you don\'t get enough nutrients (scurvy from lack of Vitamin C)',
        'Vaccinations help prevent serious diseases by teaching your immune system to fight them',
        'Regular checkups help doctors catch problems early when they\'re easier to treat'
      ]
    },
    {
      title: 'Digestive System Deep Dive',
      content: 'Your digestive system is like a food processing factory that breaks down everything you eat into tiny nutrients your body can use.',
      examples: [
        'Mouth: Teeth chew food, saliva begins breaking it down',
        'Stomach: Acid and enzymes break food down further',
        'Small intestine: Most nutrients are absorbed into your bloodstream here',
        'Large intestine: Water is absorbed and waste is formed',
        'The whole process takes about 24-72 hours from eating to elimination'
      ]
    },
    {
      title: 'Circulatory System Basics',
      content: 'Your circulatory system is like a delivery service that brings oxygen and nutrients to every cell in your body and takes away waste.',
      examples: [
        'Heart: A powerful muscle that pumps blood throughout your body',
        'Blood vessels: Arteries carry blood away from heart, veins bring it back',
        'Blood: Carries oxygen, nutrients, and waste products',
        'Your heart beats about 100,000 times per day',
        'Exercise makes your heart stronger and more efficient'
      ]
    },
    {
      title: 'Respiratory System Function',
      content: 'Your respiratory system is responsible for bringing oxygen into your body and removing carbon dioxide, which is a waste product.',
      examples: [
        'Nose/Mouth: Air enters and is filtered and warmed',
        'Lungs: Oxygen enters blood, carbon dioxide is removed',
        'You breathe about 20,000 times per day without thinking about it',
        'Exercise increases your breathing rate to get more oxygen',
        'Clean air is important - avoid smoking and pollution when possible'
      ]
    },
    {
      title: 'Staying Healthy Every Day',
      content: 'Health is not just about avoiding sickness - it\'s about feeling energetic, happy, and ready to enjoy life every day.',
      examples: [
        'Exercise regularly: At least 60 minutes of activity daily',
        'Eat a variety of colorful fruits and vegetables',
        'Drink plenty of water throughout the day',
        'Get enough sleep and maintain a regular sleep schedule',
        'Manage stress through hobbies, friends, and relaxation',
        'Stay positive and laugh often - it\'s good for your health!'
      ]
    }
  ],
  mcqs: [
    {
      question: 'Which system is responsible for breaking down food?',
      options: ['Circulatory system', 'Digestive system', 'Respiratory system', 'Nervous system'],
      correct: 1,
      explanation: 'The digestive system breaks down food into nutrients that your body can absorb and use for energy and growth.'
    },
    {
      question: 'What does the circulatory system transport throughout the body?',
      options: ['Only oxygen', 'Only nutrients', 'Oxygen, nutrients, and waste products', 'Only waste products'],
      correct: 2,
      explanation: 'The circulatory system transports oxygen, nutrients, and waste products throughout the body via the bloodstream.'
    },
    {
      question: 'How many hours of sleep do 6th graders need each night?',
      options: ['4-5 hours', '6-7 hours', '8-10 hours', '12-14 hours'],
      correct: 2,
      explanation: '6th graders need 8-10 hours of sleep each night for proper growth, learning, and health.'
    },
    {
      question: 'Which nutrient provides quick energy for the body?',
      options: ['Proteins', 'Carbohydrates', 'Vitamins', 'Minerals'],
      correct: 1,
      explanation: 'Carbohydrates provide quick energy for the body and are found in foods like rice, bread, and fruits.'
    },
    {
      question: 'What is the main function of proteins in our diet?',
      options: ['Provide energy', 'Build and repair tissues', 'Help digest food', 'Store water'],
      correct: 1,
      explanation: 'Proteins are essential for building and repairing muscles, tissues, and other body structures.'
    },
    {
      question: 'Which practice helps prevent the spread of infectious diseases?',
      options: ['Eating more vegetables', 'Washing hands regularly', 'Sleeping longer', 'Drinking more water'],
      correct: 1,
      explanation: 'Washing hands regularly is one of the most effective ways to prevent the spread of infectious diseases like colds and flu.'
    },
    {
      question: 'What percentage of the human body is made up of water?',
      options: ['About 30%', 'About 45%', 'About 60%', 'About 80%'],
      correct: 2,
      explanation: 'About 60% of the human body is made up of water, which is why staying hydrated is so important for health.'
    },
    {
      question: 'Which system controls your thinking and reactions?',
      options: ['Digestive system', 'Nervous system', 'Circulatory system', 'Skeletal system'],
      correct: 1,
      explanation: 'The nervous system, including the brain and nerves, controls thinking, emotions, and reactions to the environment.'
    },
    {
      question: 'What is the best way to strengthen your heart?',
      options: ['Eat more sugar', 'Exercise regularly', 'Sleep more', 'Watch more TV'],
      correct: 1,
      explanation: 'Regular exercise strengthens the heart muscle and improves overall cardiovascular health.'
    },
    {
      question: 'Which of these foods is rich in calcium for strong bones?',
      options: ['Candy', 'Milk and dairy products', 'Chips', 'Soda'],
      correct: 1,
      explanation: 'Milk and dairy products are rich in calcium, which is essential for building and maintaining strong bones and teeth.'
    }
  ]
};

// Advanced Fractions and Decimals Learning Module for 7th Grade
const advancedFractionsDecimalsModule: LearningModule = {
  title: 'Fractions and Decimals',
  introduction: 'Welcome to the advanced world of fractions and decimals! As a 7th grader, you\'re ready to master these essential mathematical concepts that form the foundation for algebra and higher mathematics. Fractions and decimals are everywhere - from calculating discounts at your favorite store to measuring ingredients in recipes, and even in science experiments. Let\'s dive deeper into these powerful number systems and become fraction and decimal experts!',
  concepts: [
    {
      title: 'Definition and Types of Fractions',
      content: 'A fraction represents a part of a whole or a ratio between two numbers. Understanding different types of fractions helps us work with them more effectively in various mathematical situations.',
      examples: [
        'Proper fractions: Numerator < denominator (2/3, 5/8, 7/10) - represents less than one whole',
        'Improper fractions: Numerator ≥ denominator (5/3, 8/5, 9/4) - represents one or more wholes',
        'Mixed numbers: Whole number + proper fraction (1 2/3, 2 1/4, 3 5/8) - another way to write improper fractions',
        'Like fractions: Same denominator (2/7, 3/7, 5/7) - easy to add and subtract',
        'Unlike fractions: Different denominators (1/2, 2/3, 3/4) - need common denominator for operations'
      ]
    },
    {
      title: 'Adding and Subtracting Fractions',
      content: 'Adding and subtracting fractions requires finding a common denominator when the fractions are unlike. For like fractions, simply add or subtract the numerators.',
      examples: [
        'Like fractions: 3/8 + 2/8 = 5/8, 7/9 - 4/9 = 3/9 = 1/3',
        'Unlike fractions: 1/2 + 1/3 = 3/6 + 2/6 = 5/6 (LCD = 6)',
        'With mixed numbers: 2 1/4 + 1 3/8 = 2 2/8 + 1 3/8 = 3 5/8',
        'Subtraction with borrowing: 3 1/4 - 1 3/4 = 2 5/4 - 1 3/4 = 1 2/4 = 1 1/2',
        'Finding LCD: Use prime factorization or list multiples to find the smallest common denominator'
      ]
    },
    {
      title: 'Multiplying Fractions',
      content: 'Multiplying fractions is straightforward: multiply numerators together and denominators together. Always simplify the result and consider cross-canceling to make calculations easier.',
      examples: [
        'Basic multiplication: 2/3 × 3/4 = 6/12 = 1/2',
        'Cross-canceling: 4/9 × 3/8 = (4×3)/(9×8), cancel 4 and 8 → 1/9 × 3/2 = 3/18 = 1/6',
        'Mixed numbers: Convert first: 1 1/2 × 2 2/3 = 3/2 × 8/3 = 24/6 = 4',
        'Fraction × whole number: 3/4 × 8 = 3/4 × 8/1 = 24/4 = 6',
        'Real-world: 2/3 of 3/4 cup = 2/3 × 3/4 = 6/12 = 1/2 cup'
      ]
    },
    {
      title: 'Dividing Fractions',
      content: 'To divide fractions, multiply by the reciprocal (multiplicative inverse) of the divisor. This method works for all fraction division problems.',
      examples: [
        'Keep-Change-Flip: 3/4 ÷ 2/3 = 3/4 × 3/2 = 9/8 = 1 1/8',
        'Dividing by whole number: 2/3 ÷ 4 = 2/3 × 1/4 = 2/12 = 1/6',
        'Mixed numbers: 2 1/2 ÷ 1 1/4 = 5/2 ÷ 5/4 = 5/2 × 4/5 = 20/10 = 2',
        'Whole number ÷ fraction: 6 ÷ 2/3 = 6/1 × 3/2 = 18/2 = 9',
        'Think conceptually: "How many 1/4s are in 3/4?" → 3/4 ÷ 1/4 = 3'
      ]
    },
    {
      title: 'Definition of Decimals and Place Values',
      content: 'Decimals are another way to represent parts of a whole, based on powers of 10. Understanding place value is crucial for working with decimals accurately.',
      examples: [
        'Place values: 123.456 → 1(hundreds), 2(tens), 3(ones), 4(tenths), 5(hundredths), 6(thousandths)',
        'Reading decimals: 0.375 = "three hundred seventy-five thousandths"',
        'Equivalent forms: 0.5 = 0.50 = 0.500 (trailing zeros don\'t change value)',
        'Terminating vs. repeating: 1/4 = 0.25 (terminates), 1/3 = 0.333... (repeats)',
        'Scientific context: 0.001 meters = 1 millimeter'
      ]
    },
    {
      title: 'Adding and Subtracting Decimals',
      content: 'Adding and subtracting decimals requires careful alignment of decimal points to maintain correct place values. This ensures accurate calculations.',
      examples: [
        'Basic addition: 12.56 + 7.89 = 20.45 (align decimal points)',
        'Different decimal places: 15.7 + 8.234 = 15.700 + 8.234 = 23.934',
        'Subtraction: 25.8 - 9.67 = 25.80 - 9.67 = 16.13',
        'With whole numbers: 45 + 12.678 = 45.000 + 12.678 = 57.678',
        'Money example: $23.45 - $8.99 = $14.46'
      ]
    },
    {
      title: 'Multiplying Decimals',
      content: 'When multiplying decimals, multiply as if they were whole numbers, then count the total decimal places in both factors to place the decimal point in the product.',
      examples: [
        'Basic multiplication: 2.5 × 1.4 = 3.5 (1 + 1 = 2 decimal places)',
        'More decimal places: 0.25 × 0.6 = 0.150 = 0.15 (2 + 1 = 3 decimal places)',
        'By powers of 10: 3.47 × 100 = 347 (move decimal 2 places right)',
        'By powers of 0.1: 5.6 × 0.01 = 0.056 (move decimal 2 places left)',
        'Real-world: 3.5 hours × $12.50/hour = $43.75'
      ]
    },
    {
      title: 'Dividing Decimals',
      content: 'To divide decimals, make the divisor a whole number by moving the decimal point, then move the decimal point in the dividend the same number of places. Divide as usual.',
      examples: [
        'Divisor is whole: 12.6 ÷ 3 = 4.2 (divide normally)',
        'Decimal divisor: 7.2 ÷ 0.8 = 72 ÷ 8 = 9 (move decimal 1 place in both)',
        'More places: 15.75 ÷ 0.25 = 1575 ÷ 25 = 63 (move 2 places)',
        'By powers of 10: 45.6 ÷ 100 = 0.456 (move decimal 2 places left)',
        'Real application: $28.50 ÷ 6 people = $4.75 per person'
      ]
    },
    {
      title: 'Converting Between Fractions and Decimals',
      content: 'Converting between fractions and decimals is essential for choosing the most convenient form for calculations and for understanding equivalent representations.',
      examples: [
        'Fraction to decimal: 3/8 = 3 ÷ 8 = 0.375',
        'Decimal to fraction: 0.625 = 625/1000 = 5/8 (simplify by dividing by 125)',
        'Common equivalents: 1/2 = 0.5, 1/4 = 0.25, 3/4 = 0.75, 1/5 = 0.2',
        'Repeating decimals: 1/3 = 0.333... = 0.3̄, 2/9 = 0.222... = 0.2̄',
        'Mixed to decimal: 2 3/4 = 2 + 3/4 = 2 + 0.75 = 2.75'
      ]
    }
  ],
  mcqs: [
    {
      question: 'Which type of fraction is 7/4?',
      options: ['Proper fraction', 'Improper fraction', 'Mixed number', 'Like fraction'],
      correct: 1,
      explanation: '7/4 is an improper fraction because the numerator (7) is greater than the denominator (4), representing more than one whole.'
    },
    {
      question: 'What is 2/3 + 1/4?',
      options: ['3/7', '3/12', '11/12', '8/12'],
      correct: 2,
      explanation: 'Find LCD of 3 and 4, which is 12. Convert: 2/3 = 8/12, 1/4 = 3/12. Then 8/12 + 3/12 = 11/12.'
    },
    {
      question: 'What is 3/4 × 2/5?',
      options: ['6/20', '3/10', '5/9', '6/9'],
      correct: 1,
      explanation: '3/4 × 2/5 = (3×2)/(4×5) = 6/20 = 3/10 when simplified by dividing both numerator and denominator by 2.'
    },
    {
      question: 'What is 2/3 ÷ 1/6?',
      options: ['2/18', '1/4', '4', '12'],
      correct: 2,
      explanation: 'To divide fractions, multiply by the reciprocal: 2/3 ÷ 1/6 = 2/3 × 6/1 = 12/3 = 4.'
    },
    {
      question: 'In the decimal 45.678, what is the place value of 7?',
      options: ['Tenths', 'Hundredths', 'Thousandths', 'Ten-thousandths'],
      correct: 1,
      explanation: 'In 45.678, the 7 is in the hundredths place (second digit after the decimal point).'
    },
    {
      question: 'What is 12.45 + 8.7?',
      options: ['20.15', '21.15', '21.52', '20.52'],
      correct: 1,
      explanation: 'Align decimal points: 12.45 + 8.70 = 21.15. Add column by column, carrying when necessary.'
    },
    {
      question: 'What is 3.2 × 1.5?',
      options: ['4.8', '4.7', '5.2', '3.8'],
      correct: 0,
      explanation: '3.2 × 1.5 = 4.80 = 4.8. Count decimal places: 1 + 1 = 2 decimal places in the answer.'
    },
    {
      question: 'What is 8.4 ÷ 0.7?',
      options: ['1.2', '12', '0.12', '120'],
      correct: 1,
      explanation: 'Move decimal point to make divisor whole: 8.4 ÷ 0.7 = 84 ÷ 7 = 12.'
    },
    {
      question: 'What is 5/8 as a decimal?',
      options: ['0.625', '0.58', '0.85', '0.125'],
      correct: 0,
      explanation: '5/8 = 5 ÷ 8 = 0.625. Divide 5 by 8 using long division.'
    },
    {
      question: 'What is 0.375 as a fraction in simplest form?',
      options: ['375/1000', '3/8', '37/100', '15/40'],
      correct: 1,
      explanation: '0.375 = 375/1000. Simplify by dividing both by 125: 375÷125 = 3, 1000÷125 = 8, so 0.375 = 3/8.'
    }
  ]
};

// Microsoft PowerPoint Learning Module for 7th Grade
const powerpointModule: LearningModule = {
  title: 'Microsoft PowerPoint - Complete Module',
  introduction: 'Welcome to the exciting world of Microsoft PowerPoint! PowerPoint is like having your own personal presentation studio right on your computer. Whether you\'re presenting a school project, sharing your vacation photos, or creating a story about your favorite hobby, PowerPoint helps you communicate your ideas in a visual and engaging way. Think of it as your digital canvas where you can combine text, images, colors, and even animations to make presentations that wow your audience. Let\'s dive in and discover how to create amazing presentations!',
  concepts: [
    {
      title: 'Understanding Presentation Components - Slides',
      content: 'A presentation is made up of slides, which are like digital pages or cards that you can flip through. Each slide can contain different types of content to help tell your story or share information.',
      examples: [
        'Slides are the building blocks of your presentation - think of them like pages in a digital book',
        'Title slides introduce your presentation topic and your name',
        'Content slides contain the main information, pictures, or data you want to share',
        'Conclusion slides summarize your key points',
        'You can have as many slides as you need - typically 5-15 slides for a school presentation',
        'Each slide should focus on one main idea to keep your audience engaged'
      ]
    },
    {
      title: 'Creating and Adding Content to Your Presentation',
      content: 'PowerPoint makes it easy to add different types of content to your slides. You can combine text, images, shapes, and charts to create engaging presentations that capture your audience\'s attention.',
      examples: [
        'Adding Text: Click in text boxes and type your content - use bullet points for lists',
        'Inserting Images: Go to Insert > Pictures to add photos from your computer or online',
        'Drawing Shapes: Use Insert > Shapes to add circles, rectangles, arrows, and more',
        'Creating Charts: Insert > Chart lets you make bar graphs, pie charts, and line graphs',
        'Keep text large enough to read (at least 24-point font for content)',
        'Use high-quality images that relate to your topic'
      ]
    },
    {
      title: 'Editing and Formatting Your Content',
      content: 'Once you\'ve added content to your slides, you can edit and format it to make it look professional and appealing. PowerPoint offers many tools to customize your text and objects.',
      examples: [
        'Change font styles, sizes, and colors using the Home tab',
        'Make text bold, italic, or underlined for emphasis',
        'Align text left, center, or right depending on your design',
        'Resize images and shapes by dragging the corner handles',
        'Move objects around your slide by clicking and dragging them',
        'Use the Format tab when objects are selected for more customization options'
      ]
    },
    {
      title: 'Design Features - Themes and Backgrounds',
      content: 'PowerPoint\'s design features help make your presentation look professional and visually appealing. Themes provide coordinated colors, fonts, and layouts that work well together.',
      examples: [
        'Themes: Go to Design tab to choose from pre-made color and font combinations',
        'Background styles: Customize your slide backgrounds with colors, gradients, or patterns',
        'Choose themes that match your topic (formal for serious topics, colorful for fun topics)',
        'Consistency is key - use the same theme throughout your presentation',
        'Avoid busy backgrounds that make text hard to read',
        'Designer tool (if available) suggests layout improvements for your content'
      ]
    },
    {
      title: 'Adding Transitions Between Slides',
      content: 'Transitions are the visual effects that occur when you move from one slide to the next. They help create smooth flow and keep your audience engaged during your presentation.',
      examples: [
        'Access transitions through the Transitions tab in the ribbon',
        'Popular transitions: Fade, Push, Wipe, and Reveal work well for most presentations',
        'Preview transitions by clicking on them in the gallery',
        'Set transition duration (1-2 seconds is usually perfect)',
        'Apply the same transition to all slides for consistency',
        'Avoid flashy transitions that might distract from your content'
      ]
    },
    {
      title: 'Animations for Individual Objects',
      content: 'Animations make individual objects on your slides appear, move, or disappear in interesting ways. They can help emphasize important points and control the timing of information delivery.',
      examples: [
        'Select an object, then go to Animations tab to choose effects',
        'Entrance animations: Fade In, Fly In, Zoom - make objects appear',
        'Emphasis animations: Pulse, Grow/Shrink - draw attention to objects',
        'Exit animations: Fade Out, Fly Out - make objects disappear',
        'Use Animation Pane to control the order and timing of multiple animations',
        'Keep animations simple and purposeful - they should enhance, not distract'
      ]
    },
    {
      title: 'Slide Show View and Presentation Mode',
      content: 'Slide Show View is how your audience will see your presentation. It displays your slides full-screen without the PowerPoint editing interface, creating a professional presentation experience.',
      examples: [
        'Press F5 or click Slide Show tab > From Beginning to start your presentation',
        'Use arrow keys, space bar, or mouse clicks to advance slides',
        'Press Esc key to exit Slide Show mode and return to editing',
        'Practice your presentation multiple times in Slide Show mode',
        'Check that all text is readable and images are clear in full-screen mode',
        'Use slide show to time your presentation and make adjustments'
      ]
    },
    {
      title: 'Presenter View - Your Secret Presentation Tool',
      content: 'Presenter View is a special mode that shows you additional information while presenting, including speaker notes, upcoming slides, and presentation controls. It\'s like having a personal assistant during your presentation!',
      examples: [
        'Shows your current slide to the audience while giving you extra information',
        'Displays speaker notes that only you can see - great for remembering key points',
        'Preview of the next slide helps you prepare smooth transitions',
        'Built-in timer helps you keep track of presentation length',
        'Laser pointer and pen tools for highlighting important information',
        'Available when you connect your computer to a projector or second monitor'
      ]
    },
    {
      title: 'Saving Your Presentation in Different Formats',
      content: 'PowerPoint allows you to save your presentation in various file formats depending on how you plan to use or share it. Different formats serve different purposes.',
      examples: [
        '.pptx - Standard PowerPoint format, keeps all editing capabilities',
        '.pdf - Creates a document version that anyone can view, great for sharing',
        '.jpg/.png - Saves individual slides as image files',
        '.mp4 - Exports your presentation as a video with timings and narration',
        'PowerPoint Show (.ppsx) - Opens directly in presentation mode',
        'Always keep a .pptx version so you can make future edits'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What are the basic building blocks of a PowerPoint presentation?',
      options: ['Pages', 'Slides', 'Sheets', 'Documents'],
      correct: 1,
      explanation: 'Slides are the basic building blocks of a PowerPoint presentation. Each slide is like a digital page that can contain text, images, and other content.'
    },
    {
      question: 'Which tab would you use to add pictures to your presentation?',
      options: ['Home', 'Insert', 'Design', 'Animations'],
      correct: 1,
      explanation: 'The Insert tab contains tools for adding content like pictures, shapes, charts, and other objects to your slides.'
    },
    {
      question: 'What is the purpose of using themes in PowerPoint?',
      options: ['To add animations', 'To provide coordinated colors and fonts', 'To insert pictures', 'To create charts'],
      correct: 1,
      explanation: 'Themes provide coordinated colors, fonts, and layouts that work well together, making your presentation look professional and visually appealing.'
    },
    {
      question: 'What are transitions in PowerPoint?',
      options: ['Effects between individual objects', 'Visual effects when moving between slides', 'Background colors', 'Font styles'],
      correct: 1,
      explanation: 'Transitions are visual effects that occur when you move from one slide to the next, helping create smooth flow in your presentation.'
    },
    {
      question: 'Which type of animation would you use to make text appear on a slide?',
      options: ['Exit animation', 'Emphasis animation', 'Entrance animation', 'Motion path'],
      correct: 2,
      explanation: 'Entrance animations (like Fade In or Fly In) are used to make objects appear on a slide in an interesting way.'
    },
    {
      question: 'How do you start a presentation in Slide Show mode?',
      options: ['Press Ctrl+S', 'Press F5', 'Press Alt+Tab', 'Press Ctrl+P'],
      correct: 1,
      explanation: 'Pressing F5 starts your presentation from the beginning in Slide Show mode, displaying slides full-screen to your audience.'
    },
    {
      question: 'What is a key benefit of Presenter View?',
      options: ['It makes slides bigger', 'It shows speaker notes that only you can see', 'It adds more animations', 'It changes slide themes'],
      correct: 1,
      explanation: 'Presenter View shows speaker notes that only the presenter can see, along with other helpful tools like a timer and preview of the next slide.'
    },
    {
      question: 'Which file format keeps all editing capabilities in PowerPoint?',
      options: ['.pdf', '.jpg', '.pptx', '.mp4'],
      correct: 2,
      explanation: '.pptx is the standard PowerPoint format that preserves all editing capabilities, allowing you to make changes to your presentation later.'
    },
    {
      question: 'What should you consider when choosing a background for your slides?',
      options: ['It should be as colorful as possible', 'It should make text easy to read', 'It should have many patterns', 'It should change on every slide'],
      correct: 1,
      explanation: 'The most important consideration for slide backgrounds is that they should make your text easy to read and not distract from your content.'
    },
    {
      question: 'What is the recommended font size for slide content?',
      options: ['12 points', '18 points', 'At least 24 points', '36 points'],
      correct: 2,
      explanation: 'Content text should be at least 24 points to ensure it\'s large enough for your audience to read easily, even from the back of the room.'
    }
  ]
};

// Nutrition in Animals and Plants Learning Module for 7th Grade
const nutritionAnimalsPlantModule: LearningModule = {
  title: 'Nutrition in Animals and Plants - Complete Module',
  introduction: 'Welcome to the amazing world of Nutrition! Have you ever wondered how plants make their own food without ever going to a grocery store, or how different animals have developed unique ways to get their nutrition? From tiny bacteria to giant elephants, every living organism has fascinating ways to obtain and use food for energy and growth. Let\'s explore the incredible diversity of nutritional strategies in the natural world and discover how these processes keep life thriving on Earth!',
  concepts: [
    {
      title: 'Photosynthesis - How Plants Make Food',
      content: 'Photosynthesis is the amazing process by which green plants make their own food using sunlight, carbon dioxide, and water. This process not only feeds the plant but also produces the oxygen we breathe, making it one of the most important biological processes on Earth.',
      examples: [
        'Photosynthesis equation: 6CO₂ + 6H₂O + light energy → C₆H₁₂O₆ + 6O₂',
        'Location: Occurs mainly in leaves, specifically in chloroplasts containing chlorophyll',
        'Raw materials needed: Carbon dioxide (from air), water (from soil), sunlight (energy source)',
        'Products: Glucose (food for plant) and oxygen (released into atmosphere)',
        'Chlorophyll: Green pigment that captures light energy and gives plants their green color',
        'Best conditions: Bright sunlight, adequate water, moderate temperature, sufficient CO₂'
      ]
    },
    {
      title: 'Types of Plant Nutrition',
      content: 'While most plants are autotrophic (make their own food), some plants have evolved different nutritional strategies to survive in challenging environments or to get additional nutrients.',
      examples: [
        'Autotrophic plants: Most green plants that perform photosynthesis (roses, oak trees, grass)',
        'Heterotrophic plants: Cannot perform photosynthesis, depend on other organisms (some orchids)',
        'Parasitic plants: Live on other plants and steal nutrients (mistletoe, dodder, rafflesia)',
        'Insectivorous plants: Trap and digest insects for extra nutrients (Venus flytrap, pitcher plant, sundew)',
        'Saprophytic plants: Feed on dead organic matter (some fungi, though fungi aren\'t technically plants)',
        'Symbiotic relationships: Some plants partner with bacteria or fungi for mutual benefit'
      ]
    },
    {
      title: 'Animal Nutrition Types Based on Diet',
      content: 'Animals have evolved different feeding strategies based on what they eat. These dietary classifications help us understand how different species have adapted to their environments and food sources.',
      examples: [
        'Herbivores: Eat only plants (cows, deer, rabbits, elephants) - have flat teeth for grinding',
        'Carnivores: Eat only other animals (lions, sharks, eagles) - have sharp teeth for tearing meat',
        'Omnivores: Eat both plants and animals (humans, bears, pigs) - have mixed tooth types',
        'Detritivores: Feed on dead and decaying organic matter (earthworms, some beetles, vultures)',
        'Filter feeders: Strain small organisms from water (whales eating krill, flamingos)',
        'Specialized feeders: Nectar feeders (hummingbirds), blood feeders (mosquitoes), bone crushers (hyenas)'
      ]
    },
    {
      title: 'Human Digestive System Overview',
      content: 'The human digestive system is like a complex food processing factory that breaks down food into nutrients our body can absorb and use. Each part has a specific job in this amazing process.',
      examples: [
        'Mouth: Mechanical breakdown (chewing) and chemical breakdown (saliva enzymes) begin here',
        'Esophagus: Muscular tube that pushes food from mouth to stomach using peristalsis',
        'Stomach: Acidic environment breaks down proteins, churns food into liquid (gastric juice, HCl)',
        'Small intestine: Main absorption site, enzymes complete digestion, nutrients enter bloodstream',
        'Large intestine: Absorbs water, forms solid waste, houses beneficial bacteria',
        'Liver and pancreas: Produce digestive enzymes and bile to help break down fats and proteins'
      ]
    },
    {
      title: 'Functions of Main Digestive Parts',
      content: 'Each part of the digestive system has evolved specific structures and functions to efficiently process different types of food and extract maximum nutrition.',
      examples: [
        'Teeth: Different shapes for different jobs - incisors (cutting), canines (tearing), molars (grinding)',
        'Stomach acid: Kills harmful bacteria, activates protein-digesting enzymes, breaks down food structure',
        'Small intestine villi: Tiny finger-like projections increase surface area for better nutrient absorption',
        'Pancreatic enzymes: Break down carbohydrates, proteins, and fats into absorbable molecules',
        'Bile from liver: Emulsifies fats (breaks them into smaller droplets for easier digestion)',
        'Large intestine bacteria: Help digest fiber, produce some vitamins (like vitamin K)'
      ]
    },
    {
      title: 'Nutrition in Simple Animals - Insects',
      content: 'Insects have developed incredibly diverse feeding mechanisms and digestive systems despite their small size. Their feeding strategies are often highly specialized for their ecological niche.',
      examples: [
        'Chewing insects: Grasshoppers, beetles have strong mandibles for cutting and grinding food',
        'Piercing-sucking: Mosquitoes, aphids have needle-like mouthparts for liquid feeding',
        'Lapping: Butterflies and bees have long proboscis for reaching nectar deep in flowers',
        'Digestive system: Simple tube from mouth to anus, with specialized regions for different functions',
        'Social insects: Ants and bees have complex food-sharing behaviors within colonies',
        'Metamorphosis nutrition: Caterpillars (herbivores) become butterflies (nectar feeders)'
      ]
    },
    {
      title: 'Nutrition in Simple Animals - Amoeba',
      content: 'Amoeba, a single-celled organism, shows us the most basic form of animal nutrition. Despite having no specialized organs, it can effectively capture, digest, and absorb food.',
      examples: [
        'Phagocytosis: Amoeba surrounds food particles with its cell membrane (like cellular eating)',
        'Food vacuoles: Temporary digestive compartments form inside the cell to break down food',
        'Pseudopodia: False feet used for movement and capturing prey (bacteria, smaller organisms)',
        'Digestion: Enzymes released into food vacuoles break down complex molecules',
        'Absorption: Nutrients pass directly through vacuole membrane into cytoplasm',
        'Waste removal: Undigested materials expelled by exocytosis (reverse of phagocytosis)'
      ]
    },
    {
      title: 'Importance of Nutrition in Living Organisms',
      content: 'Nutrition is fundamental to all life processes. It provides the energy and raw materials needed for growth, repair, reproduction, and maintaining all vital functions in living organisms.',
      examples: [
        'Energy production: Food molecules are broken down to release energy (ATP) for cellular activities',
        'Growth and development: Nutrients provide building blocks for new cells and tissues',
        'Repair and maintenance: Proteins and other nutrients help fix damaged parts and replace worn-out cells',
        'Immune function: Proper nutrition supports disease resistance and healing',
        'Reproduction: Adequate nutrition is essential for producing healthy offspring',
        'Ecosystem balance: Nutritional relationships (food chains/webs) maintain ecological stability'
      ]
    },
    {
      title: 'Nutritional Adaptations in Nature',
      content: 'Living organisms have evolved remarkable adaptations to obtain nutrition from their environment. These adaptations show the incredible creativity of evolution in solving survival challenges.',
      examples: [
        'Desert plants: Cacti store water and have modified leaves (spines) to reduce water loss',
        'Deep-sea creatures: Some make their own light (bioluminescence) to attract prey in darkness',
        'Parasites: Tapeworms have hooks and suckers to attach inside host intestines',
        'Camouflage hunters: Praying mantis looks like a leaf to ambush unsuspecting insects',
        'Tool users: Some primates use sticks to extract insects from tree holes',
        'Cooperative hunting: Wolves hunt in packs to bring down large prey they couldn\'t catch alone'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the main process by which green plants make their own food?',
      options: ['Respiration', 'Photosynthesis', 'Digestion', 'Absorption'],
      correct: 1,
      explanation: 'Photosynthesis is the process where green plants use sunlight, carbon dioxide, and water to make glucose (food) and release oxygen.'
    },
    {
      question: 'Which type of plant gets additional nutrients by trapping and digesting insects?',
      options: ['Parasitic plants', 'Autotrophic plants', 'Insectivorous plants', 'Saprophytic plants'],
      correct: 2,
      explanation: 'Insectivorous plants like Venus flytraps and pitcher plants trap and digest insects to get extra nutrients, especially nitrogen.'
    },
    {
      question: 'Animals that eat only plants are called:',
      options: ['Carnivores', 'Herbivores', 'Omnivores', 'Detritivores'],
      correct: 1,
      explanation: 'Herbivores are animals that eat only plants. Examples include cows, deer, rabbits, and elephants.'
    },
    {
      question: 'Which part of the human digestive system is the main site for nutrient absorption?',
      options: ['Stomach', 'Large intestine', 'Small intestine', 'Esophagus'],
      correct: 2,
      explanation: 'The small intestine is the main site for nutrient absorption, with its villi providing a large surface area for this process.'
    },
    {
      question: 'What is the function of stomach acid in digestion?',
      options: ['Only kills bacteria', 'Only breaks down carbohydrates', 'Kills bacteria and helps break down proteins', 'Only absorbs nutrients'],
      correct: 2,
      explanation: 'Stomach acid (HCl) kills harmful bacteria and activates enzymes that help break down proteins into smaller molecules.'
    },
    {
      question: 'How does an Amoeba capture its food?',
      options: ['Using teeth', 'Through phagocytosis with pseudopodia', 'By filtering water', 'Using tentacles'],
      correct: 1,
      explanation: 'Amoeba captures food through phagocytosis, using its pseudopodia (false feet) to surround and engulf food particles.'
    },
    {
      question: 'What type of mouthparts do mosquitoes have for feeding?',
      options: ['Chewing', 'Piercing-sucking', 'Lapping', 'Grinding'],
      correct: 1,
      explanation: 'Mosquitoes have piercing-sucking mouthparts that allow them to pierce skin and suck blood or plant juices.'
    },
    {
      question: 'Which animals are classified as omnivores?',
      options: ['Animals that eat only plants', 'Animals that eat only meat', 'Animals that eat both plants and animals', 'Animals that eat only dead matter'],
      correct: 2,
      explanation: 'Omnivores are animals that eat both plants and animals. Humans, bears, and pigs are examples of omnivores.'
    },
    {
      question: 'What is the main function of chlorophyll in plants?',
      options: ['Store water', 'Capture light energy for photosynthesis', 'Protect from insects', 'Transport nutrients'],
      correct: 1,
      explanation: 'Chlorophyll is the green pigment in plants that captures light energy needed for photosynthesis to occur.'
    },
    {
      question: 'Why is nutrition important for living organisms?',
      options: ['Only for growth', 'Only for energy', 'Only for reproduction', 'For energy, growth, repair, and all life processes'],
      correct: 3,
      explanation: 'Nutrition is essential for all life processes including energy production, growth, repair, immune function, reproduction, and maintaining vital functions.'
    }
  ]
};

// Life Processes Learning Module for 7th Grade
const lifeProcessesModule: LearningModule = {
  title: 'Life Processes - Complete Module',
  introduction: 'Welcome to the fascinating world of Life Processes! Have you ever wondered how plants make their own food, how your heart pumps blood throughout your body, or how living things grow and reproduce? Life processes are the amazing activities that keep all living organisms alive and thriving. From the smallest bacteria to the largest trees, every living thing carries out these essential processes. Let\'s explore the incredible mechanisms that make life possible!',
  concepts: [
    {
      title: 'Nutrition - How Living Things Get Energy',
      content: 'Nutrition is the process by which living organisms obtain and use food for energy, growth, and repair. There are two main types of nutrition based on how organisms get their food: autotrophic and heterotrophic nutrition.',
      examples: [
        'Autotrophic nutrition: Organisms make their own food (plants using photosynthesis)',
        'Heterotrophic nutrition: Organisms depend on other organisms for food (animals eating plants or other animals)',
        'Examples of autotrophs: Green plants, algae, some bacteria that use sunlight',
        'Examples of heterotrophs: Humans, animals, fungi, most bacteria',
        'Photosynthesis equation: 6CO₂ + 6H₂O + light energy → C₆H₁₂O₆ + 6O₂',
        'Parasitic nutrition: Some organisms live on or inside other organisms (tapeworms, mistletoe)'
      ]
    },
    {
      title: 'Respiration - Breathing and Energy Release',
      content: 'Respiration is the process of breaking down food (glucose) to release energy for life activities. It occurs in two main types: aerobic (with oxygen) and anaerobic (without oxygen). This process happens in every living cell.',
      examples: [
        'Aerobic respiration: Uses oxygen to completely break down glucose (most efficient)',
        'Equation: C₆H₁₂O₆ + 6O₂ → 6CO₂ + 6H₂O + ATP (energy)',
        'Anaerobic respiration: Occurs without oxygen (less efficient, produces less energy)',
        'Examples of anaerobic: Yeast fermentation (making bread), muscle fatigue during intense exercise',
        'Breathing vs Respiration: Breathing is taking in air, respiration is releasing energy from food',
        'All living things respire - plants respire 24/7, not just during photosynthesis'
      ]
    },
    {
      title: 'Transportation in Plants',
      content: 'Plants have a well-organized transport system to move water, minerals, and food throughout their body. This system consists of two main types of tissues: xylem and phloem, working like a plant\'s circulatory system.',
      examples: [
        'Xylem: Transports water and minerals from roots to leaves (like water pipes)',
        'Phloem: Transports food (glucose) from leaves to all parts of the plant',
        'Root hair: Increase surface area for better water and mineral absorption',
        'Transpiration: Loss of water through stomata helps pull water up from roots',
        'Stomata: Tiny pores on leaves that control gas exchange and water loss',
        'Transport direction: Xylem moves upward, phloem moves in all directions'
      ]
    },
    {
      title: 'Transportation in Humans',
      content: 'Humans have a complex circulatory system with the heart as a pump and blood vessels as highways. This system delivers oxygen, nutrients, and removes waste products from every cell in our body.',
      examples: [
        'Heart: Four-chambered muscular pump that beats about 100,000 times per day',
        'Blood vessels: Arteries (carry blood away from heart), veins (carry blood to heart), capillaries (tiny vessels)',
        'Blood components: Red blood cells (carry oxygen), white blood cells (fight infections), platelets (clotting), plasma (liquid)',
        'Circulation path: Heart → Lungs (pick up oxygen) → Heart → Body (deliver oxygen) → Heart',
        'Pulse: Can feel heartbeat in wrist or neck - normal rate is 60-100 beats per minute',
        'Blood pressure: Force of blood against artery walls as heart pumps'
      ]
    },
    {
      title: 'Excretion in Plants',
      content: 'Plants produce waste products during their life processes and have various methods to get rid of them. Unlike animals, plants have simpler excretory methods and some wastes are even useful.',
      examples: [
        'Oxygen: Released as waste from photosynthesis (lucky for us, we need it!)',
        'Carbon dioxide: Released as waste from respiration through stomata',
        'Water vapor: Excess water removed through transpiration',
        'Waste storage: Some plants store wastes in vacuoles, old leaves, or bark',
        'Leaf fall: Deciduous trees shed leaves containing accumulated wastes',
        'Resins and gums: Some plants excrete these substances through bark or stems'
      ]
    },
    {
      title: 'Excretion in Humans',
      content: 'Human excretory system removes harmful waste products from our body to maintain health. The main organs work together to filter blood and eliminate toxins through different routes.',
      examples: [
        'Kidneys: Main excretory organs that filter blood and produce urine',
        'Lungs: Remove carbon dioxide and excess water vapor when we breathe out',
        'Skin: Removes water, salts, and small amounts of urea through sweat',
        'Liver: Processes toxins and converts harmful ammonia to less toxic urea',
        'Urinary system: Kidneys → ureters → bladder → urethra (pathway of urine)',
        'Daily excretion: We produce about 1-2 liters of urine and lose 2-3 liters of water daily'
      ]
    },
    {
      title: 'Reproduction - Continuing Life',
      content: 'Reproduction is the process by which living organisms produce new individuals of their own kind, ensuring the continuation of species. There are two main types: asexual and sexual reproduction.',
      examples: [
        'Asexual reproduction: Single parent produces offspring identical to itself',
        'Examples of asexual: Binary fission (bacteria), budding (yeast), vegetative propagation (potato sprouting)',
        'Sexual reproduction: Two parents contribute genetic material to produce offspring',
        'Examples of sexual: Most animals and flowering plants reproduce sexually',
        'Advantages of asexual: Fast, requires only one parent, offspring survive in same environment',
        'Advantages of sexual: Genetic variation helps species adapt to changing environments'
      ]
    },
    {
      title: 'Homeostasis - Maintaining Balance',
      content: 'Homeostasis is the ability of living organisms to maintain stable internal conditions despite changes in the external environment. It\'s like having an internal thermostat and control center.',
      examples: [
        'Temperature regulation: Humans maintain 37°C body temperature through sweating, shivering',
        'Blood sugar control: Pancreas produces insulin to regulate glucose levels',
        'Water balance: Kidneys adjust urine concentration based on body\'s water needs',
        'pH balance: Blood pH stays around 7.4 through breathing rate and kidney function',
        'Examples in plants: Stomatal opening/closing to conserve water, leaf orientation to avoid excess heat',
        'Feedback mechanisms: Body sensors detect changes and trigger responses to restore balance'
      ]
    },
    {
      title: 'Interconnection of Life Processes',
      content: 'All life processes work together in a coordinated manner. Each process depends on others, creating a beautiful network that sustains life. Understanding these connections helps us appreciate the complexity of living organisms.',
      examples: [
        'Nutrition provides raw materials for respiration and growth',
        'Respiration provides energy needed for all other life processes',
        'Transportation connects all body parts, delivering nutrients and removing wastes',
        'Excretion prevents toxic buildup that could harm other processes',
        'Reproduction ensures species survival and genetic diversity',
        'Homeostasis coordinates all processes to maintain optimal conditions for life'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the main difference between autotrophic and heterotrophic nutrition?',
      options: ['Autotrophs eat meat, heterotrophs eat plants', 'Autotrophs make their own food, heterotrophs depend on others for food', 'Autotrophs are animals, heterotrophs are plants', 'There is no difference'],
      correct: 1,
      explanation: 'Autotrophic organisms (like plants) make their own food through photosynthesis, while heterotrophic organisms (like animals) must obtain food from other sources.'
    },
    {
      question: 'Which type of respiration produces more energy?',
      options: ['Anaerobic respiration', 'Aerobic respiration', 'Both produce the same amount', 'Neither produces energy'],
      correct: 1,
      explanation: 'Aerobic respiration uses oxygen to completely break down glucose, producing much more energy (ATP) than anaerobic respiration.'
    },
    {
      question: 'What is the function of xylem in plants?',
      options: ['Transport food from leaves to roots', 'Transport water and minerals from roots to leaves', 'Store food in stems', 'Produce oxygen'],
      correct: 1,
      explanation: 'Xylem tissue transports water and minerals absorbed by roots upward to the leaves and other parts of the plant.'
    },
    {
      question: 'Which component of blood carries oxygen in humans?',
      options: ['White blood cells', 'Platelets', 'Red blood cells', 'Plasma'],
      correct: 2,
      explanation: 'Red blood cells contain hemoglobin, which binds to oxygen and carries it from the lungs to all body tissues.'
    },
    {
      question: 'How do plants primarily excrete oxygen?',
      options: ['Through roots', 'Through stomata during photosynthesis', 'Through flowers', 'Through bark'],
      correct: 1,
      explanation: 'Plants release oxygen as a waste product of photosynthesis through stomata (tiny pores) on their leaves.'
    },
    {
      question: 'Which organ is the main excretory organ in humans?',
      options: ['Heart', 'Lungs', 'Kidneys', 'Stomach'],
      correct: 2,
      explanation: 'Kidneys are the main excretory organs that filter blood, remove waste products, and produce urine.'
    },
    {
      question: 'What is an advantage of sexual reproduction over asexual reproduction?',
      options: ['It\'s faster', 'It requires only one parent', 'It produces genetic variation', 'It produces more offspring'],
      correct: 2,
      explanation: 'Sexual reproduction creates genetic variation in offspring, which helps species adapt to changing environments and survive better.'
    },
    {
      question: 'What is homeostasis?',
      options: ['The process of making food', 'Maintaining stable internal conditions', 'The process of reproduction', 'The breakdown of food for energy'],
      correct: 1,
      explanation: 'Homeostasis is the ability of living organisms to maintain stable internal conditions (like temperature, pH) despite external changes.'
    },
    {
      question: 'Which process in plants is similar to breathing in animals?',
      options: ['Photosynthesis', 'Transpiration', 'Respiration', 'Reproduction'],
      correct: 2,
      explanation: 'Like animals, plants also respire (cellular respiration) to break down food and release energy, though they also perform photosynthesis.'
    },
    {
      question: 'What happens during transpiration in plants?',
      options: ['Plants make food', 'Plants lose water through stomata', 'Plants absorb carbon dioxide', 'Plants produce seeds'],
      correct: 1,
      explanation: 'Transpiration is the process where plants lose excess water vapor through stomata, which also helps in transporting water from roots to leaves.'
    }
  ]
};

// Heat Learning Module for 7th Grade
const heatModule: LearningModule = {
  title: 'Heat - Complete Module',
  introduction: 'Welcome to the amazing world of Heat! Have you ever wondered why ice melts on a hot day, or how your food gets cooked in the oven? Heat is all around us, affecting everything from the weather to the way we prepare our meals. Understanding heat helps us make sense of everyday phenomena and keeps us safe around hot objects. Get ready to discover the fascinating science behind this invisible form of energy that plays such an important role in our daily lives!',
  concepts: [
    {
      title: 'Definition of Heat and Its Relation to Temperature',
      content: 'Heat and temperature are related but different concepts. Heat is the energy that flows from a hotter object to a cooler one, while temperature measures how hot or cold something is. Think of heat as the "energy in motion" and temperature as the "hotness level."',
      examples: [
        'Heat: The energy that flows when you hold a hot cup - energy moves from the cup to your hands',
        'Temperature: How hot the cup feels - measured in degrees Celsius (°C) or Fahrenheit (°F)',
        'When you rub your hands together, friction creates heat energy that raises the temperature',
        'A large bonfire and a small candle may have the same temperature, but the bonfire gives off much more heat',
        'Heat always flows from hot to cold - never the other way around naturally'
      ]
    },
    {
      title: 'Conduction - Heat Through Touch',
      content: 'Conduction is heat transfer through direct contact. When particles in a hot material vibrate faster, they bump into neighboring particles, passing on their energy. This continues until heat spreads throughout the material.',
      examples: [
        'Touching a metal spoon that\'s been in hot soup - the heat travels up the spoon',
        'Walking barefoot on hot sand - heat transfers from sand to your feet',
        'A frying pan getting hot when placed on a stove burner',
        'Ice cubes melting when you hold them in your warm hands',
        'Metals like copper and aluminum are excellent heat conductors'
      ]
    },
    {
      title: 'Convection - Heat Through Fluids',
      content: 'Convection occurs in liquids and gases when heated particles move from one place to another, carrying their energy with them. Hot fluids rise because they become less dense, while cooler fluids sink down.',
      examples: [
        'Boiling water - hot water rises to the surface while cooler water sinks to the bottom',
        'Ocean currents - warm water from tropical regions moves toward cooler polar areas',
        'Room heating - warm air from a heater rises to the ceiling, cool air sinks to the floor',
        'Thunderstorms form when hot air rises rapidly through cooler air above',
        'Your body temperature - blood circulation carries heat throughout your body'
      ]
    },
    {
      title: 'Radiation - Heat Through Space',
      content: 'Radiation is heat transfer through electromagnetic waves that can travel through empty space. Unlike conduction and convection, radiation doesn\'t need matter to travel through - it can even cross the vacuum of space.',
      examples: [
        'Sunlight warming Earth - heat travels 93 million miles through space',
        'Feeling warm when sitting near a campfire, even without touching it',
        'Microwave ovens use radiation to heat food from the inside',
        'Infrared heat lamps used to keep food warm in restaurants',
        'Thermal imaging cameras detect heat radiation from warm objects'
      ]
    },
    {
      title: 'Effects of Heat - Expansion and Change of State',
      content: 'Heat causes materials to expand (get bigger) and can change the state of matter. As substances get hotter, their particles move faster and take up more space. With enough heat, solids can become liquids, and liquids can become gases.',
      examples: [
        'Thermal expansion: Railroad tracks have gaps to allow for expansion on hot days',
        'Balloon inflating when heated - the air inside expands',
        'Ice melting to water at 0°C (32°F) - solid to liquid state change',
        'Water boiling to steam at 100°C (212°F) - liquid to gas state change',
        'Bimetallic strips in thermostats bend when heated, controlling temperature'
      ]
    },
    {
      title: 'Temperature Measurement',
      content: 'Temperature is measured using thermometers, which work by detecting the expansion or other properties of materials as they heat up. Different scales are used around the world to measure temperature.',
      examples: [
        'Celsius scale: Water freezes at 0°C and boils at 100°C (used in most countries)',
        'Fahrenheit scale: Water freezes at 32°F and boils at 212°F (used in USA)',
        'Liquid thermometers: Mercury or alcohol expands in a thin tube as temperature rises',
        'Digital thermometers: Use electronic sensors for quick, accurate readings',
        'Normal human body temperature is about 37°C (98.6°F)'
      ]
    },
    {
      title: 'Specific Heat Capacity - How Much Heat is Needed',
      content: 'Specific heat capacity is the amount of heat energy needed to raise the temperature of a substance by one degree. Different materials need different amounts of heat to warm up, which explains why some things heat up faster than others.',
      examples: [
        'Water has high specific heat - it takes lots of energy to heat up (great for swimming pools)',
        'Metals have low specific heat - they heat up quickly (why metal gets hot fast in sun)',
        'Sand heats up faster than water, which is why beaches are hot but ocean stays cool',
        'Your body is mostly water, so it takes time to heat up or cool down',
        'Cooking pots are made of metals because they transfer heat efficiently to food'
      ]
    },
    {
      title: 'Heat Conductors vs Insulators',
      content: 'Materials can be classified based on how well they allow heat to pass through them. Conductors let heat flow easily, while insulators resist heat flow, helping to keep things hot or cold.',
      examples: [
        'Good conductors: Metals like copper, aluminum, iron (used in cooking pots)',
        'Good insulators: Wood, plastic, glass, air, fabric (used in pot handles)',
        'Winter clothing traps air (an insulator) to keep you warm',
        'Thermos bottles use vacuum (no air) as perfect insulation',
        'Double-pane windows have air between glass sheets for insulation'
      ]
    },
    {
      title: 'Heat in Everyday Life',
      content: 'Understanding heat helps us use energy efficiently, stay comfortable, and stay safe. From cooking food to heating homes, heat energy is essential for modern life.',
      examples: [
        'Cooking uses all three heat transfer methods: conduction (pan), convection (oven), radiation (grill)',
        'House insulation reduces heat loss in winter and heat gain in summer',
        'Car engines need cooling systems to prevent overheating',
        'Refrigerators remove heat from inside to keep food cold',
        'Solar panels convert heat radiation from the sun into electricity'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the main difference between heat and temperature?',
      options: ['They are exactly the same thing', 'Heat is energy flow, temperature measures hotness', 'Temperature is energy, heat measures coldness', 'Heat only exists in solids'],
      correct: 1,
      explanation: 'Heat is the energy that flows from hotter to cooler objects, while temperature is a measure of how hot or cold something is.'
    },
    {
      question: 'Which method of heat transfer requires direct contact between objects?',
      options: ['Radiation', 'Convection', 'Conduction', 'Evaporation'],
      correct: 2,
      explanation: 'Conduction requires direct contact between objects, as heat energy is transferred through vibrating particles that bump into each other.'
    },
    {
      question: 'How does heat from the Sun reach Earth?',
      options: ['Through conduction', 'Through convection', 'Through radiation', 'Through contact'],
      correct: 2,
      explanation: 'Heat from the Sun reaches Earth through radiation, which can travel through the vacuum of space without needing any matter.'
    },
    {
      question: 'What happens to most materials when they are heated?',
      options: ['They contract (get smaller)', 'They expand (get bigger)', 'They stay the same size', 'They disappear'],
      correct: 1,
      explanation: 'Most materials expand when heated because their particles move faster and take up more space.'
    },
    {
      question: 'At what temperature does water boil in Celsius?',
      options: ['0°C', '50°C', '100°C', '200°C'],
      correct: 2,
      explanation: 'Water boils at 100°C (212°F) at standard atmospheric pressure, changing from liquid to gas state.'
    },
    {
      question: 'Which type of heat transfer occurs in fluids (liquids and gases)?',
      options: ['Conduction only', 'Convection', 'Radiation only', 'None of these'],
      correct: 1,
      explanation: 'Convection occurs in fluids when heated particles move and carry their energy with them, with hot fluids rising and cool fluids sinking.'
    },
    {
      question: 'What does specific heat capacity measure?',
      options: ['How hot something can get', 'How much heat is needed to raise temperature by one degree', 'How fast heat travels', 'How much something expands'],
      correct: 1,
      explanation: 'Specific heat capacity measures how much heat energy is needed to raise the temperature of a substance by one degree.'
    },
    {
      question: 'Which of these is the best heat conductor?',
      options: ['Wood', 'Plastic', 'Copper', 'Glass'],
      correct: 2,
      explanation: 'Copper is an excellent heat conductor, which is why it\'s often used in cooking pots and heat exchangers.'
    },
    {
      question: 'Why do we use insulators in winter clothing?',
      options: ['To conduct heat away from the body', 'To prevent heat loss from the body', 'To create more heat', 'To measure temperature'],
      correct: 1,
      explanation: 'Insulators in winter clothing prevent heat loss from our body by trapping air and reducing heat transfer to the cold environment.'
    },
    {
      question: 'What happens when ice is heated to 0°C?',
      options: ['It gets colder', 'It changes from solid to liquid', 'It becomes gas immediately', 'Nothing happens'],
      correct: 1,
      explanation: 'At 0°C (32°F), ice melts and changes from solid state to liquid state (water) due to the added heat energy.'
    }
  ]
};

// Motion and Time Learning Module for 7th Grade
const motionTimeModule: LearningModule = {
  title: 'Motion and Time - Complete Module',
  introduction: 'Welcome to the fascinating world of Motion and Time! Have you ever wondered how fast a cheetah runs, or why the moon seems to follow you when you\'re in a moving car? Motion is everywhere around us - from the spinning of Earth to the beating of your heart. Understanding motion and time helps us make sense of the world, from planning a trip to understanding how rockets reach space. Get ready to explore the amazing science behind everything that moves!',
  concepts: [
    {
      title: 'Definition of Motion and Reference Points',
      content: 'Motion is the change in position of an object with respect to time. But here\'s the interesting part - whether something is moving or not depends on what you\'re comparing it to! This comparison point is called a reference point or frame of reference.',
      examples: [
        'A person sitting in a moving train is at rest relative to the train, but moving relative to the ground',
        'The moon appears to move across the sky, but it\'s actually Earth that\'s rotating',
        'A book on your desk is at rest relative to your room, but moving relative to the sun',
        'Reference point: The object or place from which you observe motion',
        'Motion is relative - the same object can be moving and stationary at the same time depending on the reference point'
      ]
    },
    {
      title: 'Uniform vs Non-Uniform Motion',
      content: 'Objects can move in different ways. Some move at a steady pace, while others speed up, slow down, or change direction. Understanding these patterns helps us describe and predict motion.',
      examples: [
        'Uniform Motion: Moving at constant speed in a straight line (a car on cruise control)',
        'Non-Uniform Motion: Speed or direction changes (a ball thrown up in the air)',
        'A train moving at 60 km/h on a straight track shows uniform motion',
        'A bicycle speeding up from a traffic light shows non-uniform motion',
        'Most real-world motion is non-uniform due to forces like friction and gravity'
      ]
    },
    {
      title: 'Distance vs Displacement',
      content: 'Distance and displacement might sound similar, but they\'re quite different! Distance tells us how much ground was covered, while displacement tells us how far you are from where you started.',
      examples: [
        'Distance: Total path length traveled (always positive)',
        'Displacement: Straight-line distance from start to end point (can be positive, negative, or zero)',
        'If you walk 3 km east, then 3 km west, distance = 6 km, displacement = 0 km',
        'Running around a 400m track once: distance = 400m, displacement = 0m',
        'Walking 5 km north from home: distance = 5 km, displacement = 5 km north'
      ]
    },
    {
      title: 'Speed and Its Formula',
      content: 'Speed tells us how fast an object is moving. It\'s the distance covered per unit time. The faster something moves, the more distance it covers in the same amount of time.',
      examples: [
        'Speed = Distance ÷ Time (v = d/t)',
        'Units: meters per second (m/s), kilometers per hour (km/h)',
        'A car traveling 120 km in 2 hours has speed = 120 ÷ 2 = 60 km/h',
        'Average speed considers the total journey time',
        'Instantaneous speed is the speed at any particular moment'
      ]
    },
    {
      title: 'Measuring Time and Standard Units',
      content: 'Time is a fundamental quantity that helps us understand when events happen and how long they last. Having standard units ensures everyone measures time the same way worldwide.',
      examples: [
        'Standard unit of time: Second (s)',
        'Other units: minute (60s), hour (3600s), day (86,400s)',
        'Atomic clocks are the most accurate time-measuring devices',
        'Stopwatches measure short time intervals accurately',
        'Sundials were among the first time-measuring devices'
      ]
    },
    {
      title: 'Relationship Between Distance, Speed, and Time',
      content: 'Distance, speed, and time are closely related. If you know any two of these quantities, you can calculate the third using simple formulas. This relationship is the foundation of motion studies.',
      examples: [
        'Speed = Distance ÷ Time (v = d/t)',
        'Distance = Speed × Time (d = v × t)',
        'Time = Distance ÷ Speed (t = d/v)',
        'A runner moving at 5 m/s for 10 seconds covers: d = 5 × 10 = 50 meters',
        'To travel 300 km at 75 km/h takes: t = 300 ÷ 75 = 4 hours'
      ]
    },
    {
      title: 'Introduction to Motion Graphs',
      content: 'Graphs are powerful tools that help us visualize motion. They can show patterns that are hard to see in numbers alone, making it easier to understand how objects move over time.',
      examples: [
        'Distance-Time Graph: Shows distance covered over time',
        'Straight line in d-t graph = uniform motion',
        'Curved line in d-t graph = non-uniform motion',
        'Speed-Time Graph: Shows how speed changes over time',
        'Horizontal line in s-t graph = constant speed (uniform motion)'
      ]
    },
    {
      title: 'Reading Distance-Time Graphs',
      content: 'Distance-time graphs tell the story of motion. The shape of the line reveals whether an object is moving fast or slow, or if it\'s speeding up or slowing down.',
      examples: [
        'Steeper line = faster motion (more distance in less time)',
        'Horizontal line = object at rest (no distance covered)',
        'Straight sloping line = uniform motion',
        'Curved line = non-uniform motion (acceleration or deceleration)',
        'The slope of the line gives the speed of the object'
      ]
    },
    {
      title: 'Common Measuring Instruments for Motion',
      content: 'Scientists and engineers use various instruments to measure different aspects of motion. Each instrument is designed for specific types of measurements and provides accurate data.',
      examples: [
        'Odometer: Measures total distance traveled (found in vehicles)',
        'Speedometer: Shows instantaneous speed (dashboard of cars)',
        'Stopwatch: Measures time intervals accurately',
        'Measuring tape: Measures distance and displacement',
        'GPS devices: Modern tools for measuring distance, speed, and location'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is motion?',
      options: ['Change in position with respect to time', 'Change in speed only', 'Change in direction only', 'Moving in a circle'],
      correct: 0,
      explanation: 'Motion is defined as the change in position of an object with respect to time. It involves both change in location and the passage of time.'
    },
    {
      question: 'A passenger sitting in a moving train is at rest relative to:',
      options: ['The ground', 'The train', 'The trees outside', 'The railway station'],
      correct: 1,
      explanation: 'The passenger is at rest relative to the train because both are moving together at the same speed in the same direction.'
    },
    {
      question: 'Which of the following is an example of uniform motion?',
      options: ['A ball thrown upward', 'A car moving at constant speed on a straight road', 'A bicycle turning a corner', 'A pendulum swinging'],
      correct: 1,
      explanation: 'A car moving at constant speed on a straight road shows uniform motion because both speed and direction remain constant.'
    },
    {
      question: 'If you walk 4 km east and then 3 km west, what is your displacement?',
      options: ['7 km', '1 km east', '1 km west', '0 km'],
      correct: 1,
      explanation: 'Displacement is the straight-line distance from start to finish. 4 km east - 3 km west = 1 km east from the starting point.'
    },
    {
      question: 'What is the speed of a car that travels 150 km in 3 hours?',
      options: ['50 km/h', '45 km/h', '60 km/h', '153 km/h'],
      correct: 0,
      explanation: 'Speed = Distance ÷ Time = 150 km ÷ 3 hours = 50 km/h.'
    },
    {
      question: 'What is the standard unit of time?',
      options: ['Hour', 'Minute', 'Second', 'Day'],
      correct: 2,
      explanation: 'The second (s) is the standard (SI) unit of time used in scientific measurements worldwide.'
    },
    {
      question: 'If a cyclist travels at 15 km/h for 2 hours, what distance is covered?',
      options: ['30 km', '7.5 km', '17 km', '13 km'],
      correct: 0,
      explanation: 'Distance = Speed × Time = 15 km/h × 2 hours = 30 km.'
    },
    {
      question: 'In a distance-time graph, what does a horizontal line represent?',
      options: ['Uniform motion', 'Object at rest', 'Non-uniform motion', 'Very fast motion'],
      correct: 1,
      explanation: 'A horizontal line in a distance-time graph means no distance is being covered over time, indicating the object is at rest.'
    },
    {
      question: 'Which instrument measures the total distance traveled by a vehicle?',
      options: ['Speedometer', 'Stopwatch', 'Odometer', 'Thermometer'],
      correct: 2,
      explanation: 'An odometer measures the total distance traveled by a vehicle and is commonly found in car dashboards.'
    },
    {
      question: 'What does the slope of a distance-time graph represent?',
      options: ['Distance', 'Time', 'Speed', 'Acceleration'],
      correct: 2,
      explanation: 'The slope of a distance-time graph represents speed. A steeper slope indicates higher speed.'
    }
  ]
};

// Electric Current and Circuits Learning Module for 7th Grade
const electricCurrentCircuitsModule: LearningModule = {
  title: 'Electric Current and Circuits - Complete Module',
  introduction: 'Welcome to the electrifying world of Electric Current and Circuits! Have you ever wondered how electricity travels through wires to light up your room, charge your phone, or power your computer? Electricity is like an invisible river of energy flowing through special pathways called circuits. Understanding electric current and circuits will help you appreciate the amazing technology around you and keep you safe when using electrical devices. Let\'s explore this fascinating world where tiny particles create the power that runs our modern world!',
  concepts: [
    {
      title: 'Electric Current - Definition, Unit, and Formula',
      content: 'Electric current is the flow of electric charge through a conductor, like water flowing through a pipe. It tells us how much electric charge passes through a point in a given time. Understanding current is essential for working with any electrical device.',
      examples: [
        'Definition: Electric current is the rate of flow of electric charge',
        'Formula: Current (I) = Charge (Q) ÷ Time (t), written as I = Q/t',
        'Unit: Ampere (A), named after French physicist André-Marie Ampère',
        'Smaller units: milliampere (mA = 0.001 A), microampere (μA = 0.000001 A)',
        'Example: If 10 coulombs of charge flow in 2 seconds, current = 10 ÷ 2 = 5 amperes',
        'Real-world: A typical LED bulb uses about 0.01 A (10 mA) of current'
      ]
    },
    {
      title: 'Voltage - The Electric Push',
      content: 'Voltage is the electric pressure that pushes current through a circuit. Think of it like water pressure in pipes - higher pressure pushes more water through. Voltage provides the energy that makes electric charges move.',
      examples: [
        'Definition: Voltage is the electric potential difference that drives current',
        'Unit: Volt (V), named after Italian physicist Alessandro Volta',
        'Think of voltage as the "electric pressure" in a circuit',
        'Common voltages: AA battery (1.5V), car battery (12V), household outlet (120V in US)',
        'Higher voltage can push more current through the same resistance',
        'Voltage is measured using a device called a voltmeter'
      ]
    },
    {
      title: 'Resistance - The Electric Friction',
      content: 'Resistance is the opposition to the flow of electric current. Just like friction slows down a sliding object, resistance reduces the flow of electricity. Different materials have different amounts of resistance.',
      examples: [
        'Definition: Resistance is the opposition to electric current flow',
        'Unit: Ohm (Ω), named after German physicist Georg Ohm',
        'Think of resistance as "electric friction" that slows down current',
        'Ohm\'s Law: Voltage = Current × Resistance (V = I × R)',
        'Example: If voltage is 12V and resistance is 4Ω, then current = 12 ÷ 4 = 3A',
        'Resistance is measured using a device called an ohmmeter'
      ]
    },
    {
      title: 'Components of an Electric Circuit',
      content: 'An electric circuit is like a highway system for electricity. It needs specific components working together to allow electric current to flow safely and usefully from one place to another.',
      examples: [
        'Power Source: Provides the energy (battery, generator, wall outlet)',
        'Conductors: Allow electricity to flow (wires, usually made of copper)',
        'Load: Uses the electrical energy (light bulb, motor, heater)',
        'Switch: Controls the flow of electricity (turns circuit on/off)',
        'All components must be connected in a complete loop for current to flow',
        'Protection devices: Fuses and circuit breakers prevent dangerous overloads'
      ]
    },
    {
      title: 'Series Circuits - Single Path',
      content: 'In a series circuit, all components are connected in a single line, like cars following each other on a one-lane road. The same current flows through each component, but voltage is shared among them.',
      examples: [
        'Components are connected end-to-end in a single path',
        'Same current flows through all components',
        'If one component fails, the entire circuit stops working',
        'Voltage is divided among all components',
        'Example: Old Christmas lights were often wired in series',
        'Adding more components increases total resistance and reduces current'
      ]
    },
    {
      title: 'Parallel Circuits - Multiple Paths',
      content: 'In a parallel circuit, components are connected on separate branches, like multiple lanes on a highway. Each component gets the full voltage, and current divides among the different paths.',
      examples: [
        'Components are connected on separate branches or paths',
        'Each component receives the full source voltage',
        'If one component fails, others continue to work',
        'Current divides among the different branches',
        'Example: House wiring uses parallel circuits for outlets and lights',
        'Adding more parallel branches decreases total resistance'
      ]
    },
    {
      title: 'Switches and Their Functions',
      content: 'Switches are the traffic controllers of electrical circuits. They can start, stop, or redirect the flow of electricity, giving us control over when and how electrical devices operate.',
      examples: [
        'Open switch: Breaks the circuit, no current flows (like a drawbridge up)',
        'Closed switch: Completes the circuit, current flows freely',
        'Types: Toggle switches, push-button switches, rocker switches',
        'Light switches in your home control the flow of electricity to lights',
        'SPDT switch: Single Pole Double Throw - can choose between two paths',
        'Switches must be rated for the voltage and current they will handle'
      ]
    },
    {
      title: 'Safety Devices - Fuses and Circuit Breakers',
      content: 'Safety devices protect circuits and people from dangerous electrical conditions. They automatically stop electricity flow when something goes wrong, preventing fires, damage, and injuries.',
      examples: [
        'Fuses: Contain a thin wire that melts when too much current flows',
        'Circuit Breakers: Automatic switches that "trip" during overloads',
        'Both devices prevent dangerous overcurrent conditions',
        'Fuses must be replaced after they "blow," breakers can be reset',
        'Home electrical panels contain circuit breakers for different circuits',
        'These devices protect against short circuits and electrical fires'
      ]
    },
    {
      title: 'Conductors vs Insulators',
      content: 'Materials can be classified by how well they allow electricity to flow. Conductors welcome electricity, while insulators block it. This property is crucial for electrical safety and circuit design.',
      examples: [
        'Conductors: Allow electricity to flow easily (metals like copper, aluminum, gold)',
        'Insulators: Resist or block electricity flow (rubber, plastic, glass, wood)',
        'Semiconductors: Conduct electricity under certain conditions (silicon, used in computer chips)',
        'Copper wires (conductors) are covered with plastic (insulator) for safety',
        'Your body can conduct electricity, which is why electrical safety is important',
        'Electrical tools have insulated handles to protect users'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is electric current?',
      options: ['The amount of voltage in a circuit', 'The rate of flow of electric charge', 'The total resistance in a circuit', 'The power consumed by a device'],
      correct: 1,
      explanation: 'Electric current is defined as the rate of flow of electric charge through a conductor, measured in amperes (A).'
    },
    {
      question: 'What is the unit of electric current?',
      options: ['Volt (V)', 'Ohm (Ω)', 'Ampere (A)', 'Watt (W)'],
      correct: 2,
      explanation: 'The unit of electric current is the ampere (A), named after French physicist André-Marie Ampère.'
    },
    {
      question: 'What does voltage represent in an electric circuit?',
      options: ['The speed of electrons', 'The electric pressure that drives current', 'The amount of current flowing', 'The resistance of the circuit'],
      correct: 1,
      explanation: 'Voltage represents the electric potential difference or "electric pressure" that drives current through a circuit.'
    },
    {
      question: 'According to Ohm\'s Law, if voltage is 15V and resistance is 3Ω, what is the current?',
      options: ['5A', '18A', '12A', '45A'],
      correct: 0,
      explanation: 'Using Ohm\'s Law (V = I × R), we get I = V ÷ R = 15V ÷ 3Ω = 5A.'
    },
    {
      question: 'In a series circuit, what happens if one component fails?',
      options: ['Only that component stops working', 'The entire circuit stops working', 'Other components work faster', 'Nothing changes'],
      correct: 1,
      explanation: 'In a series circuit, all components are in a single path, so if one fails, it breaks the entire circuit and everything stops working.'
    },
    {
      question: 'What is the main advantage of parallel circuits over series circuits?',
      options: ['They use less electricity', 'Each component gets full voltage', 'They are cheaper to build', 'They have higher resistance'],
      correct: 1,
      explanation: 'In parallel circuits, each component receives the full source voltage and can operate independently, so if one fails, others continue working.'
    },
    {
      question: 'What happens when a switch is in the "open" position?',
      options: ['Maximum current flows', 'No current flows', 'Current flows in reverse', 'Voltage increases'],
      correct: 1,
      explanation: 'When a switch is open, it breaks the circuit path, preventing current from flowing through the circuit.'
    },
    {
      question: 'What is the primary purpose of a fuse in an electric circuit?',
      options: ['To increase voltage', 'To store electricity', 'To protect against overcurrent', 'To reduce resistance'],
      correct: 2,
      explanation: 'A fuse protects circuits by melting when too much current flows, breaking the circuit to prevent damage and fires.'
    },
    {
      question: 'Which of these materials is the best conductor of electricity?',
      options: ['Rubber', 'Plastic', 'Copper', 'Glass'],
      correct: 2,
      explanation: 'Copper is an excellent conductor of electricity, which is why it\'s commonly used in electrical wires and circuits.'
    },
    {
      question: 'Why are electrical wires covered with plastic?',
      options: ['To make them look better', 'To reduce weight', 'To provide insulation for safety', 'To increase conductivity'],
      correct: 2,
      explanation: 'Electrical wires are covered with plastic insulation to prevent electric shock and short circuits, ensuring safety for users.'
    }
  ]
};

// Respiration and Circulation Learning Module for 7th Grade
const respirationCirculationModule: LearningModule = {
  title: 'Respiration and Circulation - Complete Module',
  introduction: 'Welcome to the amazing world of Respiration and Circulation! Have you ever wondered how the air you breathe reaches every cell in your body, or how your heart works tirelessly to keep you alive? These two vital life processes work together like a perfect team to deliver oxygen and nutrients while removing waste products. Understanding how you breathe and how your blood circulates will help you appreciate the incredible machine that is your body. Let\'s explore these fascinating processes that keep you healthy and active every single day!',
  concepts: [
    {
      title: 'Definition and Types of Respiration',
      content: 'Respiration is the process of breaking down food (mainly glucose) to release energy for all life activities. There are two main types of respiration: aerobic (with oxygen) and anaerobic (without oxygen). Every living cell in your body performs respiration to get the energy it needs to function.',
      examples: [
        'Aerobic respiration: Most efficient type that uses oxygen to completely break down glucose',
        'Equation: C₆H₁₂O₆ + 6O₂ → 6CO₂ + 6H₂O + ATP (energy)',
        'Anaerobic respiration: Occurs when oxygen is limited, produces less energy',
        'Example of anaerobic: When you exercise intensely, muscles may respire anaerobically causing fatigue',
        'Yeast fermentation: Anaerobic respiration used in making bread (produces CO₂) and alcohol',
        'All living organisms respire: Plants, animals, bacteria, and fungi all need energy from respiration'
      ]
    },
    {
      title: 'Components of Human Circulatory System - The Heart',
      content: 'The heart is a powerful muscular pump that beats about 100,000 times per day. It has four chambers: two atria (upper chambers) that receive blood, and two ventricles (lower chambers) that pump blood out. The heart works like two pumps in one, sending blood to the lungs and to the rest of the body.',
      examples: [
        'Right atrium: Receives deoxygenated blood from the body',
        'Right ventricle: Pumps blood to the lungs to pick up oxygen',
        'Left atrium: Receives oxygenated blood from the lungs',
        'Left ventricle: Strongest chamber, pumps oxygen-rich blood to the entire body',
        'Heart valves: One-way doors that prevent blood from flowing backward',
        'Average heart rate: 60-100 beats per minute in a healthy person at rest'
      ]
    },
    {
      title: 'Components of Human Circulatory System - Blood Vessels',
      content: 'Blood vessels are the highways of your circulatory system, carrying blood to every part of your body. There are three main types: arteries (carry blood away from heart), veins (carry blood back to heart), and capillaries (tiny vessels where gas exchange occurs).',
      examples: [
        'Arteries: Thick, muscular walls to handle high pressure blood from heart',
        'Major arteries: Aorta (largest), pulmonary artery (to lungs), carotid (to brain)',
        'Veins: Thinner walls with valves to prevent backflow of blood',
        'Major veins: Vena cava (largest), pulmonary veins (from lungs)',
        'Capillaries: Microscopic vessels where oxygen and nutrients pass to cells',
        'Blood pressure: Force of blood against artery walls (normal: 120/80 mmHg)'
      ]
    },
    {
      title: 'Components of Human Circulatory System - Blood Components',
      content: 'Blood is a liquid tissue made up of different components, each with specific functions. It consists of red blood cells, white blood cells, platelets, and plasma. Together, they transport materials, fight infections, and help with clotting.',
      examples: [
        'Red blood cells (RBCs): Contain hemoglobin to carry oxygen, make up 45% of blood',
        'White blood cells (WBCs): Fight infections and diseases, part of immune system',
        'Platelets: Help blood clot to stop bleeding when you get injured',
        'Plasma: Liquid portion (55% of blood) that carries nutrients, hormones, and waste',
        'Hemoglobin: Iron-containing protein that gives blood its red color and carries oxygen',
        'Blood volume: Average adult has about 5-6 liters of blood in their body'
      ]
    },
    {
      title: 'Pulmonary Circulation - Heart to Lungs',
      content: 'Pulmonary circulation is the pathway blood takes from the heart to the lungs and back. This shorter loop is specifically for gas exchange - picking up oxygen and getting rid of carbon dioxide. It\'s like a special delivery service between your heart and lungs.',
      examples: [
        'Step 1: Right ventricle pumps deoxygenated blood through pulmonary artery',
        'Step 2: Blood travels to lungs where CO₂ is removed and O₂ is picked up',
        'Step 3: Oxygenated blood returns to left atrium through pulmonary veins',
        'Gas exchange: Occurs in tiny air sacs called alveoli in the lungs',
        'Unique feature: Pulmonary arteries carry deoxygenated blood (unlike other arteries)',
        'Time taken: Blood completes pulmonary circulation in about 4-8 seconds'
      ]
    },
    {
      title: 'Systemic Circulation - Heart to Body',
      content: 'Systemic circulation is the larger pathway that carries oxygenated blood from the heart to all body tissues and returns deoxygenated blood back to the heart. This circulation delivers oxygen and nutrients while collecting waste products from every cell in your body.',
      examples: [
        'Step 1: Left ventricle pumps oxygenated blood through aorta (largest artery)',
        'Step 2: Blood travels through arteries to all body organs and tissues',
        'Step 3: In capillaries, oxygen and nutrients are delivered, waste is collected',
        'Step 4: Deoxygenated blood returns through veins to right atrium',
        'Complete journey: Takes about 20 seconds for blood to travel through entire body',
        'Delivery system: Brings oxygen, glucose, hormones, and removes CO₂, urea'
      ]
    },
    {
      title: 'Functions of Respiration in the Body',
      content: 'Respiration serves multiple vital functions beyond just breathing. It provides energy for all cellular activities, maintains proper gas levels in blood, helps regulate body temperature, and supports the immune system. Every function of your body depends on the energy produced by respiration.',
      examples: [
        'Energy production: Breaking down glucose provides ATP for muscle contraction, brain function',
        'Gas exchange: Brings in oxygen for cells, removes toxic carbon dioxide',
        'Temperature regulation: Heat produced during respiration helps maintain body temperature',
        'pH balance: Breathing rate adjusts to control acid levels in blood',
        'Waste removal: Eliminates CO₂ and water vapor through exhalation',
        'Support for other processes: Provides energy for digestion, growth, repair, reproduction'
      ]
    },
    {
      title: 'Functions of Circulation in the Body',
      content: 'The circulatory system is like a sophisticated transport network that keeps your body functioning smoothly. It delivers essential materials to cells, removes waste products, helps fight infections, regulates temperature, and maintains fluid balance throughout your body.',
      examples: [
        'Transport function: Carries oxygen, nutrients, hormones to every cell',
        'Waste removal: Transports CO₂ to lungs, urea to kidneys for elimination',
        'Immune protection: White blood cells patrol body to fight infections and diseases',
        'Temperature control: Blood distributes heat throughout body, helps cool through skin',
        'Healing and repair: Delivers materials needed for wound healing and tissue repair',
        'Communication: Hormones travel through blood to coordinate body functions'
      ]
    },
    {
      title: 'Integration of Respiration and Circulation',
      content: 'Respiration and circulation work together as an integrated system to sustain life. The respiratory system provides oxygen and removes carbon dioxide, while the circulatory system transports these gases throughout the body. Their coordination ensures every cell gets what it needs to survive.',
      examples: [
        'Perfect partnership: Lungs provide O₂ to blood, blood delivers O₂ to cells',
        'Waste coordination: Cells produce CO₂, blood carries it to lungs for removal',
        'Rate adjustment: Heart rate and breathing rate increase together during exercise',
        'Efficiency: Hemoglobin in blood maximizes oxygen transport capacity',
        'Emergency response: Both systems work faster when body needs more energy',
        'Health connection: Problems in one system affect the other (heart disease affects breathing)'
      ]
    }
  ],
  mcqs: [
    {
      question: 'What is the main difference between aerobic and anaerobic respiration?',
      options: ['Aerobic uses glucose, anaerobic uses fats', 'Aerobic uses oxygen, anaerobic does not', 'Aerobic occurs in plants, anaerobic in animals', 'There is no difference'],
      correct: 1,
      explanation: 'Aerobic respiration requires oxygen and completely breaks down glucose to produce maximum energy, while anaerobic respiration occurs without oxygen and produces less energy.'
    },
    {
      question: 'Which chamber of the heart pumps blood to the lungs?',
      options: ['Right atrium', 'Left atrium', 'Right ventricle', 'Left ventricle'],
      correct: 2,
      explanation: 'The right ventricle pumps deoxygenated blood through the pulmonary artery to the lungs for gas exchange.'
    },
    {
      question: 'What is the function of red blood cells?',
      options: ['Fight infections', 'Help blood clot', 'Carry oxygen', 'Produce hormones'],
      correct: 2,
      explanation: 'Red blood cells contain hemoglobin, which binds to oxygen and transports it from the lungs to all body tissues.'
    },
    {
      question: 'Which blood vessels carry blood away from the heart?',
      options: ['Veins', 'Arteries', 'Capillaries', 'Lymph vessels'],
      correct: 1,
      explanation: 'Arteries are blood vessels that carry blood away from the heart to various parts of the body. They have thick, muscular walls to handle high pressure.'
    },
    {
      question: 'In pulmonary circulation, where does blood go after leaving the right ventricle?',
      options: ['To the brain', 'To the lungs', 'To the liver', 'To the kidneys'],
      correct: 1,
      explanation: 'In pulmonary circulation, blood travels from the right ventricle to the lungs for gas exchange, then returns to the left atrium.'
    },
    {
      question: 'What is the largest artery in the human body?',
      options: ['Pulmonary artery', 'Carotid artery', 'Aorta', 'Femoral artery'],
      correct: 2,
      explanation: 'The aorta is the largest artery in the human body. It carries oxygenated blood from the left ventricle to the rest of the body.'
    },
    {
      question: 'Which component of blood helps in clotting?',
      options: ['Red blood cells', 'White blood cells', 'Platelets', 'Plasma'],
      correct: 2,
      explanation: 'Platelets are small blood cells that help form clots to stop bleeding when blood vessels are injured.'
    },
    {
      question: 'What happens during gas exchange in the lungs?',
      options: ['Only oxygen enters blood', 'Only carbon dioxide leaves blood', 'Oxygen enters and carbon dioxide leaves blood', 'No gases are exchanged'],
      correct: 2,
      explanation: 'During gas exchange in the lungs, oxygen from inhaled air enters the blood while carbon dioxide from the blood is removed and exhaled.'
    },
    {
      question: 'Which system delivers oxygen from lungs to body tissues?',
      options: ['Respiratory system only', 'Circulatory system only', 'Both respiratory and circulatory systems', 'Digestive system'],
      correct: 2,
      explanation: 'Both systems work together: the respiratory system brings oxygen into the blood, and the circulatory system transports it to all body tissues.'
    },
    {
      question: 'What is the normal resting heart rate for a healthy person?',
      options: ['40-50 beats per minute', '60-100 beats per minute', '120-150 beats per minute', '200-250 beats per minute'],
      correct: 1,
      explanation: 'A normal resting heart rate for a healthy adult is typically between 60-100 beats per minute, with athletes often having lower rates.'
    }
  ]
};

const curatedTopics: Topic[] = [
  { grade: 6, subject: 'Mathematics', title: 'Integers - Complete Module', bullets: ['Definition and representation', 'Absolute value concept', 'Comparing and ordering', 'All four operations', 'Properties and rules'] },
  { grade: 6, subject: 'Mathematics', title: 'Fractions & Decimals', bullets: ['Simplify and compare fractions', 'Convert fractions ↔ decimals', 'Add/Subtract with LCM', 'Multiply/Divide fractions and decimals'] },
  { grade: 6, subject: 'Science', title: 'Electricity and Circuits - Complete Module', bullets: ['Definition of electricity and current', 'Circuit components and functions', 'Series vs parallel circuits', 'Conductors vs insulators', 'Electrical safety rules'] },
  { grade: 6, subject: 'Science', title: 'Our Body and Health - Complete Module', bullets: ['Human body systems overview', 'Health and hygiene importance', 'Balanced diet and nutrients', 'Disease prevention basics', 'Daily health practices'] },
  { grade: 6, subject: 'Computer Science', title: 'Word Processor – Tabular Presentation - Complete Module', bullets: ['Table components: rows, columns, cells', 'Creating and inserting tables', 'Merging and splitting cells', 'Formatting and styling tables', 'Advantages of tabular presentation'] },
  { grade: 7, subject: 'Mathematics', title: 'Fractions and Decimals - Complete Module', bullets: ['Types of fractions: proper, improper, mixed, like, unlike', 'Addition and subtraction rules', 'Multiplication and division techniques', 'Decimal place values and operations', 'Converting between fractions and decimals'] },
  { grade: 7, subject: 'Science', title: 'Motion and Time - Complete Module', bullets: ['Definition of motion and reference points', 'Uniform vs non-uniform motion', 'Distance vs displacement', 'Speed formula and calculations', 'Time measurement and units', 'Motion graphs interpretation', 'Measuring instruments for motion'] },
  { grade: 7, subject: 'Science', title: 'Electric Current and Circuits - Complete Module', bullets: ['Electric current definition and formula', 'Voltage and resistance concepts', 'Circuit components and functions', 'Series vs parallel circuits', 'Switches and safety devices', 'Conductors vs insulators'] },
  { grade: 7, subject: 'Science', title: 'Heat - Complete Module', bullets: ['Heat vs temperature definition', 'Conduction, convection, radiation', 'Effects: expansion and state changes', 'Temperature measurement basics', 'Specific heat capacity introduction', 'Heat conductors vs insulators'] },
  { grade: 7, subject: 'Science', title: 'Life Processes - Complete Module', bullets: ['Nutrition: autotrophic vs heterotrophic', 'Respiration: aerobic vs anaerobic', 'Transportation in plants and humans', 'Excretion in plants and humans', 'Reproduction: asexual vs sexual', 'Homeostasis concept'] },
  { grade: 7, subject: 'Science', title: 'Nutrition in Animals and Plants - Complete Module', bullets: ['Photosynthesis process and requirements', 'Plant nutrition types: autotrophic, parasitic, insectivorous', 'Animal diet types: herbivores, carnivores, omnivores', 'Human digestive system overview', 'Nutrition in insects and Amoeba', 'Overall importance of nutrition'] },
  { grade: 7, subject: 'Science', title: 'Respiration and Circulation - Complete Module', bullets: ['Aerobic vs anaerobic respiration types', 'Heart chambers and blood pumping', 'Blood vessels: arteries, veins, capillaries', 'Blood components and their functions', 'Pulmonary vs systemic circulation', 'Integration of breathing and blood flow'] },
  { grade: 7, subject: 'Science', title: 'Nutrition in Plants', bullets: ['Photosynthesis equation', 'Heterotrophic nutrition', 'Nitrogen fixation basics'] },
  { grade: 7, subject: 'Computer Science', title: 'Microsoft PowerPoint - Complete Module', bullets: ['Slide components and structure', 'Adding text, images, shapes, and charts', 'Design themes and backgrounds', 'Transitions and animations', 'Slide Show and Presenter View', 'File formats and saving options'] },
  { grade: 7, subject: 'Computer Science', title: 'Data & Variables', bullets: ['Data types', 'Variables and constants', 'Input/output operations', 'Simple data structures'] },
  { grade: 8, subject: 'Mathematics', title: 'Linear Equations in One Variable', bullets: ['Isolate variable technique', 'Transposition method', 'Word problems templates'] },
  { grade: 8, subject: 'Science', title: 'Force & Pressure', bullets: ['Contact vs non-contact forces', 'Pressure = Force/Area', 'Applications in fluids'] },
  { grade: 8, subject: 'Computer Science', title: 'Control Structures', bullets: ['Conditional statements', 'Loops and iterations', 'Basic functions', 'Program flow'] },
  { grade: 9, subject: 'Mathematics', title: 'Polynomials & Factorization', bullets: ['Degree and coefficient', 'Factor by grouping', 'Identities: a²−b², (a±b)²'] },
  { grade: 9, subject: 'Physics', title: 'Motion', bullets: ['Speed, velocity, acceleration', 's = ut + 1/2 at²', 'Distance-time graphs'] },
  { grade: 9, subject: 'Chemistry', title: 'Atoms & Molecules', bullets: ['Laws of chemical combination', 'Atomic and molecular mass', 'Mole concept basics'] },
  { grade: 9, subject: 'Biology', title: 'Tissues', bullets: ['Plant vs animal tissues', 'Meristematic vs permanent', 'Functions and examples'] },
  { grade: 9, subject: 'Computer Science', title: 'Introduction to Algorithms', bullets: ['Algorithm design', 'Pseudocode basics', 'Flowcharts', 'Time complexity introduction'] },
  { grade: 10, subject: 'Mathematics', title: 'Quadratic Equations', bullets: ['Standard form ax²+bx+c=0', 'Discriminant Δ = b²−4ac', 'Roots: (-b±√Δ)/2a'] },
  { grade: 10, subject: 'Physics', title: 'Electricity', bullets: ['Ohm\'s law V=IR', 'Series vs parallel', 'Power P=VI=I²R=V²/R'] },
  { grade: 10, subject: 'Chemistry', title: 'Chemical Reactions & Equations', bullets: ['Balancing equations', 'Types: combination, decomposition, displacement', 'Oxidation and reduction basics'] },
  { grade: 10, subject: 'Biology', title: 'Life Processes', bullets: ['Nutrition and respiration', 'Transport in plants and animals', 'Excretion overview'] },
  { grade: 10, subject: 'Computer Science', title: 'Data Structures', bullets: ['Arrays and lists', 'Stacks and queues', 'Basic searching algorithms', 'Introduction to sorting'] },
  { grade: 11, subject: 'Physics', title: 'Kinematics & Vectors', bullets: ['Projectile components', 'Relative velocity basics', 'Vector addition and resolution'] },
  { grade: 11, subject: 'Chemistry', title: 'Thermodynamics', bullets: ['First law ΔU=Q−W', 'Enthalpy and entropy', 'Gibbs free energy ΔG=ΔH−TΔS'] },
  { grade: 11, subject: 'Mathematics', title: 'Relations & Functions', bullets: ['Domain, codomain, range', 'Types of relations', 'Function composition basics'] },
  { grade: 11, subject: 'Biology', title: 'Plant Physiology', bullets: ['Photosynthesis light and dark reactions', 'Transpiration and stomata', 'Mineral nutrition'] },
  { grade: 11, subject: 'Computer Science', title: 'Object-Oriented Programming', bullets: ['Classes and objects', 'Inheritance and polymorphism', 'Encapsulation', 'Abstract classes and interfaces'] },
  { grade: 12, subject: 'Physics', title: 'Electrostatics', bullets: ['Coulomb\'s law', 'Electric field lines', 'Capacitance C=Q/V'] },
  { grade: 12, subject: 'Chemistry', title: 'Chemical Kinetics', bullets: ['Rate laws and order', 'Arrhenius equation', 'Half-life for first order'] },
  { grade: 12, subject: 'Mathematics', title: 'Integration Basics', bullets: ['∫x^n dx formula', 'Substitution technique', 'Definite integral properties'] },
  { grade: 12, subject: 'Biology', title: 'Human Reproduction', bullets: ['Male and female reproductive systems', 'Gametogenesis', 'Menstrual cycle overview'] },
  { grade: 12, subject: 'Computer Science', title: 'Advanced Programming Concepts', bullets: ['Database connectivity', 'Web development basics', 'API integration', 'Cybersecurity fundamentals'] },
]

type FAQ = { q: string; a: string; grades?: number[] }
const faqBank: Record<string, FAQ[]> = {
  Mathematics: [
    { q: 'What formulae should I memorize for this chapter?', a: 'List core identities and standard results (e.g., quadratic formula, factoring identities, derivative/integral basics for higher grades).', grades: [9,10,11,12] },
    { q: 'How do I quickly check my answer?', a: 'Substitute the solution back into the original equation; for graphs, verify intercepts and slopes match expected values.' },
    { q: 'What are common mistakes to avoid?', a: 'Sign errors, wrong order of operations, and skipping unit checks in word problems are frequent pitfalls.' },
    { q: 'How to revise efficiently before exam?', a: 'Solve 3–5 mixed problems covering concepts from the bullet list; time yourself and review each step.' },
  ],
  Physics: [
    { q: 'Which equations are essential?', a: 'Keep a sheet of key relations (e.g., kinematics, electricity, optics); note variables and units for each.', grades: [9,10,11,12] },
    { q: 'How to approach numericals fast?', a: 'Write knowns/unknowns, pick the governing law, ensure units are in SI, then compute and sanity-check magnitudes.' },
    { q: 'How can I avoid conceptual traps?', a: 'Differentiate scalar vs vector, series vs parallel, and note directionality in field/force diagrams.' },
  ],
  Chemistry: [
    { q: 'What should I focus on last minute?', a: 'Balancing equations, reaction types, periodic trends, and quick mole-mass conversions.', grades: [9,10] },
    { q: 'Any tips for numerical accuracy?', a: 'Use atomic mass rounded consistently; clearly set up mole ratios before calculating products/reactants.' },
    { q: 'How do I structure definition answers?', a: 'State the core idea in one line, add a short example if relevant, and end with significance or application.' },
  ],
  Biology: [
    { q: 'What diagrams should I practice?', a: 'Labelled diagrams for tissues/organs, cycles (e.g., menstrual, photosynthesis) with 4–6 critical labels.', grades: [9,10,11,12] },
    { q: 'How to remember processes?', a: 'Convert steps into a 4–5 point flow; use mnemonics and understand “why” each step occurs.' },
    { q: 'What gets most weightage?', a: 'Clean labelled diagrams, definitions with examples, and stepwise explanations often fetch higher marks.' },
  ],
  'Computer Science': [
    { q: 'How do I practice coding concepts?', a: 'Use online platforms like Scratch (for beginners), CodePen, or repl.it; solve small problems daily and gradually increase complexity.', grades: [6,7,8] },
    { q: 'What programming language should I start with?', a: 'For beginners, Python or JavaScript are excellent choices due to readable syntax and wide application. Block-based languages like Scratch are perfect for grades 6-7.' },
    { q: 'How to debug effectively?', a: 'Use print statements to track variable values, read error messages carefully, test small code sections, and use debugging tools in your IDE.' },
    { q: 'How to prepare for programming assessments?', a: 'Practice implementing algorithms from scratch, review common data structures, and solve problems with time constraints to build speed and accuracy.', grades: [9,10,11,12] },
  ],
}

export default function OneNightStudyPage() {
  const [gradeFilter, setGradeFilter] = useState<number>(6)
  const [subjectFilter, setSubjectFilter] = useState<string>('Mathematics')
  const [showIntegersModule, setShowIntegersModule] = useState<boolean>(false)
  const [showFractionsDecimalsModule, setShowFractionsDecimalsModule] = useState<boolean>(false)
  const [showWordProcessorTablesModule, setShowWordProcessorTablesModule] = useState<boolean>(false)
  const [showElectricityCircuitsModule, setShowElectricityCircuitsModule] = useState<boolean>(false)
  const [showBodyHealthModule, setShowBodyHealthModule] = useState<boolean>(false)
  const [showAdvancedFractionsDecimalsModule, setShowAdvancedFractionsDecimalsModule] = useState<boolean>(false)
  const [showPowerpointModule, setShowPowerpointModule] = useState<boolean>(false)
  const [showMotionTimeModule, setShowMotionTimeModule] = useState<boolean>(false)
  const [showElectricCurrentCircuitsModule, setShowElectricCurrentCircuitsModule] = useState<boolean>(false)
  const [showHeatModule, setShowHeatModule] = useState<boolean>(false)
  const [showLifeProcessesModule, setShowLifeProcessesModule] = useState<boolean>(false)
  const [showNutritionAnimalsPlantModule, setShowNutritionAnimalsPlantModule] = useState<boolean>(false)
  const [showRespirationCirculationModule, setShowRespirationCirculationModule] = useState<boolean>(false)
  const [selectedAnswers, setSelectedAnswers] = useState<Record<number, number>>({})
  const [showAnswers, setShowAnswers] = useState<boolean>(false)
  const [reviewed, setReviewed] = useState<Record<string, boolean>>(() => {
    try {
      const saved = localStorage.getItem('ons_reviewed')
      return saved ? JSON.parse(saved) : {}
    } catch {
      return {}
    }
  })

  const subjects = useMemo(() => Array.from(new Set(curatedTopics.map(t => t.subject))), [])

  useEffect(() => {
    if (subjectFilter !== 'all' && !subjects.includes(subjectFilter) && subjects.length > 0) {
      setSubjectFilter('all')
    }
  }, [subjects, subjectFilter])

  const filtered = useMemo(() => curatedTopics.filter(t => {
    const gradeOk = t.grade === gradeFilter
    const subjectOk = subjectFilter === 'all' ? true : t.subject === subjectFilter
    return gradeOk && subjectOk
  }), [gradeFilter, subjectFilter])

  const subjectOptions = useMemo(() => ['all', ...subjects], [subjects])

  const faqsForSelection: FAQ[] = useMemo(() => {
    if (subjectFilter === 'all') return []
    const bank = faqBank[subjectFilter] || []
    return bank.filter(f => !f.grades || f.grades.includes(gradeFilter)).slice(0, 5)
  }, [subjectFilter, gradeFilter])

  const toggleReviewed = (key: string) => {
    const next = { ...reviewed, [key]: !reviewed[key] }
    setReviewed(next)
    try { localStorage.setItem('ons_reviewed', JSON.stringify(next)) } catch (error) {
      console.error('Failed to save review status to localStorage:', error)
    }
  }

  const handleAnswerSelect = (questionIndex: number, answerIndex: number) => {
    setSelectedAnswers(prev => ({ ...prev, [questionIndex]: answerIndex }))
  }

  const calculateScore = () => {
    let correct = 0
    const currentModule = showIntegersModule ? integersModule : 
                         showWordProcessorTablesModule ? wordProcessorTablesModule : 
                         showElectricityCircuitsModule ? electricityCircuitsModule :
                         showBodyHealthModule ? bodyHealthModule :
                         showAdvancedFractionsDecimalsModule ? advancedFractionsDecimalsModule :
                         showPowerpointModule ? powerpointModule :
                         showMotionTimeModule ? motionTimeModule :
                         showElectricCurrentCircuitsModule ? electricCurrentCircuitsModule :
                         showHeatModule ? heatModule :
                         showLifeProcessesModule ? lifeProcessesModule :
                         showNutritionAnimalsPlantModule ? nutritionAnimalsPlantModule :
                         showRespirationCirculationModule ? respirationCirculationModule :
                         fractionsDecimalsModule
    currentModule.mcqs.forEach((mcq, index) => {
      if (selectedAnswers[index] === mcq.correct) {
        correct++
      }
    })
    return correct
  }

  const resetMCQs = () => {
    setSelectedAnswers({})
    setShowAnswers(false)
  }

  const startIntegersModule = () => {
    setShowIntegersModule(true)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startFractionsDecimalsModule = () => {
    setShowFractionsDecimalsModule(true)
    setShowIntegersModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startWordProcessorTablesModule = () => {
    setShowWordProcessorTablesModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startElectricityCircuitsModule = () => {
    setShowElectricityCircuitsModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startBodyHealthModule = () => {
    setShowBodyHealthModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startAdvancedFractionsDecimalsModule = () => {
    setShowAdvancedFractionsDecimalsModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startPowerpointModule = () => {
    setShowPowerpointModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startMotionTimeModule = () => {
    setShowMotionTimeModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowElectricCurrentCircuitsModule(false)
    resetMCQs()
  }

  const startElectricCurrentCircuitsModule = () => {
    setShowElectricCurrentCircuitsModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowHeatModule(false)
    resetMCQs()
  }

  const startHeatModule = () => {
    setShowHeatModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    setShowLifeProcessesModule(false)
    resetMCQs()
  }

  const startLifeProcessesModule = () => {
    setShowLifeProcessesModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    setShowHeatModule(false)
    setShowNutritionAnimalsPlantModule(false)
    resetMCQs()
  }

  const startNutritionAnimalsPlantModule = () => {
    setShowNutritionAnimalsPlantModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    setShowHeatModule(false)
    setShowLifeProcessesModule(false)
    setShowRespirationCirculationModule(false)
    resetMCQs()
  }

  const startRespirationCirculationModule = () => {
    setShowRespirationCirculationModule(true)
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    setShowHeatModule(false)
    setShowLifeProcessesModule(false)
    setShowNutritionAnimalsPlantModule(false)
    resetMCQs()
  }

  const backToTopics = () => {
    setShowIntegersModule(false)
    setShowFractionsDecimalsModule(false)
    setShowWordProcessorTablesModule(false)
    setShowElectricityCircuitsModule(false)
    setShowBodyHealthModule(false)
    setShowAdvancedFractionsDecimalsModule(false)
    setShowPowerpointModule(false)
    setShowMotionTimeModule(false)
    setShowElectricCurrentCircuitsModule(false)
    setShowHeatModule(false)
    setShowLifeProcessesModule(false)
    setShowNutritionAnimalsPlantModule(false)
    setShowRespirationCirculationModule(false)
    resetMCQs()
  }

  // Show Integers Module if selected
  if (showIntegersModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 6 • Mathematics</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{integersModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{integersModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {integersModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {integersModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {integersModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{integersModule.mcqs.length} ({Math.round((calculateScore() / integersModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }
  
  // Show Word Processor Tables Module if selected
  if (showWordProcessorTablesModule && !showIntegersModule && !showFractionsDecimalsModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 6 • Computer Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{wordProcessorTablesModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{wordProcessorTablesModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {wordProcessorTablesModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {wordProcessorTablesModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {wordProcessorTablesModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{wordProcessorTablesModule.mcqs.length} ({Math.round((calculateScore() / wordProcessorTablesModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }
  
  // Show Fractions and Decimals Module if selected
  if (showFractionsDecimalsModule && !showIntegersModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 6 • Mathematics</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{fractionsDecimalsModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{fractionsDecimalsModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {fractionsDecimalsModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {fractionsDecimalsModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {fractionsDecimalsModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{fractionsDecimalsModule.mcqs.length} ({Math.round((calculateScore() / fractionsDecimalsModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Advanced Fractions and Decimals Module if selected (Grade 7)
  if (showAdvancedFractionsDecimalsModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Mathematics</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{advancedFractionsDecimalsModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{advancedFractionsDecimalsModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {advancedFractionsDecimalsModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {advancedFractionsDecimalsModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {advancedFractionsDecimalsModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{advancedFractionsDecimalsModule.mcqs.length} ({Math.round((calculateScore() / advancedFractionsDecimalsModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Electricity and Circuits Module if selected
  if (showElectricityCircuitsModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 6 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{electricityCircuitsModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{electricityCircuitsModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {electricityCircuitsModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {electricityCircuitsModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {electricityCircuitsModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{electricityCircuitsModule.mcqs.length} ({Math.round((calculateScore() / electricityCircuitsModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Our Body and Health Module if selected
  if (showBodyHealthModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 6 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{bodyHealthModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{bodyHealthModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {bodyHealthModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {bodyHealthModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {bodyHealthModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{bodyHealthModule.mcqs.length} ({Math.round((calculateScore() / bodyHealthModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Microsoft PowerPoint Module if selected
  if (showPowerpointModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Computer Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{powerpointModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{powerpointModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {powerpointModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {powerpointModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {powerpointModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{powerpointModule.mcqs.length} ({Math.round((calculateScore() / powerpointModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Motion and Time Module if selected
  if (showMotionTimeModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showElectricCurrentCircuitsModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{motionTimeModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{motionTimeModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {motionTimeModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {motionTimeModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {motionTimeModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{motionTimeModule.mcqs.length} ({Math.round((calculateScore() / motionTimeModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Electric Current and Circuits Module if selected
  if (showElectricCurrentCircuitsModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showHeatModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{electricCurrentCircuitsModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{electricCurrentCircuitsModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {electricCurrentCircuitsModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {electricCurrentCircuitsModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {electricCurrentCircuitsModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{electricCurrentCircuitsModule.mcqs.length} ({Math.round((calculateScore() / electricCurrentCircuitsModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Heat Module if selected
  if (showHeatModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule && !showLifeProcessesModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{heatModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{heatModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {heatModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {heatModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {heatModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{heatModule.mcqs.length} ({Math.round((calculateScore() / heatModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Life Processes Module if selected
  if (showLifeProcessesModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule && !showHeatModule && !showNutritionAnimalsPlantModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{lifeProcessesModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{lifeProcessesModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {lifeProcessesModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {lifeProcessesModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {lifeProcessesModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{lifeProcessesModule.mcqs.length} ({Math.round((calculateScore() / lifeProcessesModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Nutrition in Animals and Plants Module if selected
  if (showNutritionAnimalsPlantModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule && !showHeatModule && !showLifeProcessesModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{nutritionAnimalsPlantModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{nutritionAnimalsPlantModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {nutritionAnimalsPlantModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {nutritionAnimalsPlantModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {nutritionAnimalsPlantModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{nutritionAnimalsPlantModule.mcqs.length} ({Math.round((calculateScore() / nutritionAnimalsPlantModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Show Respiration and Circulation Module if selected
  if (showRespirationCirculationModule && !showIntegersModule && !showFractionsDecimalsModule && !showWordProcessorTablesModule && !showElectricityCircuitsModule && !showBodyHealthModule && !showAdvancedFractionsDecimalsModule && !showPowerpointModule && !showMotionTimeModule && !showElectricCurrentCircuitsModule && !showHeatModule && !showLifeProcessesModule && !showNutritionAnimalsPlantModule) {
    return (
      <div className="space-y-6">
        {/* Header with back button */}
        <div className="flex items-center justify-between">
          <button
            onClick={backToTopics}
            className="flex items-center gap-2 px-4 py-2 text-sm text-gray-600 dark:text-slate-400 hover:text-gray-900 dark:hover:text-white transition-colors"
          >
            ← Back to Topics
          </button>
          <div className="text-sm text-gray-500 dark:text-slate-500">Grade 7 • Science</div>
        </div>

        {/* Module Title */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white">{respirationCirculationModule.title}</h1>
          <p className="text-lg text-gray-600 dark:text-slate-400">Complete Learning Module</p>
        </div>

        {/* Introduction */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
          <h2 className="text-xl font-semibold text-blue-900 dark:text-blue-300 mb-3">📚 Introduction</h2>
          <p className="text-blue-800 dark:text-blue-400 leading-relaxed">{respirationCirculationModule.introduction}</p>
        </div>

        {/* Core Concepts */}
        <div className="space-y-4">
          <h2 className="text-2xl font-bold text-gray-900 dark:text-white">🎯 Core Concepts</h2>
          {respirationCirculationModule.concepts.map((concept, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-3">{concept.title}</h3>
              <p className="text-gray-700 dark:text-slate-300 mb-4 leading-relaxed">{concept.content}</p>
              <div className="space-y-2">
                <h4 className="font-medium text-gray-900 dark:text-white">Examples:</h4>
                <ul className="list-disc pl-6 space-y-1">
                  {concept.examples.map((example, exIndex) => (
                    <li key={exIndex} className="text-gray-600 dark:text-slate-400">{example}</li>
                  ))}
                </ul>
              </div>
            </div>
          ))}
        </div>

        {/* MCQ Section */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white">📝 Practice Questions</h2>
            <div className="flex gap-2">
              <button
                onClick={() => setShowAnswers(!showAnswers)}
                className="px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg text-sm transition-colors"
              >
                {showAnswers ? 'Hide Answers' : 'Show Answers'}
              </button>
              <button
                onClick={resetMCQs}
                className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg text-sm transition-colors"
              >
                Reset
              </button>
            </div>
          </div>

          {respirationCirculationModule.mcqs.map((mcq, index) => (
            <div key={index} className="bg-white dark:bg-slate-900 rounded-xl p-6 border border-gray-200 dark:border-slate-800">
              <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4">
                Question {index + 1}: {mcq.question}
              </h3>
              <div className="space-y-2">
                {mcq.options.map((option, optionIndex) => (
                  <label key={optionIndex} className="flex items-center space-x-3 cursor-pointer">
                    <input
                      type="radio"
                      name={`question-${index}`}
                      checked={selectedAnswers[index] === optionIndex}
                      onChange={() => handleAnswerSelect(index, optionIndex)}
                      className="w-4 h-4 text-blue-600"
                    />
                    <span className={`text-gray-700 dark:text-slate-300 ${
                      showAnswers && optionIndex === mcq.correct ? 'font-semibold text-green-600 dark:text-green-400' : ''
                    }`}>
                      {option}
                    </span>
                    {showAnswers && optionIndex === mcq.correct && (
                      <span className="text-green-600 dark:text-green-400">✓</span>
                    )}
                  </label>
                ))}
              </div>
              {showAnswers && (
                <div className="mt-4 p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800">
                  <h4 className="font-semibold text-green-800 dark:text-green-300 mb-2">Explanation:</h4>
                  <p className="text-green-700 dark:text-green-400">{mcq.explanation}</p>
                </div>
              )}
            </div>
          ))}

          {/* Score Display */}
          {Object.keys(selectedAnswers).length > 0 && (
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl p-6 border border-blue-200 dark:border-blue-800">
              <h3 className="text-xl font-semibold text-gray-900 dark:text-white mb-2">Your Progress</h3>
              <p className="text-gray-700 dark:text-slate-300">
                You've answered {Object.keys(selectedAnswers).length} out of {respirationCirculationModule.mcqs.length} questions.
                {showAnswers && (
                  <span className="block mt-2">
                    Score: {calculateScore()}/{respirationCirculationModule.mcqs.length} ({Math.round((calculateScore() / respirationCirculationModule.mcqs.length) * 100)}%)
                  </span>
                )}
              </p>
            </div>
          )}
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      <div className="flex flex-col md:flex-row gap-3 md:items-end">
        <div>
          <div className="text-xs text-gray-600 dark:text-slate-400">Grade</div>
          <select value={gradeFilter} onChange={(e) => setGradeFilter(Number(e.target.value))} className="rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-3 py-2 text-sm">
            {[6,7,8,9,10,11,12].map(g => <option key={g} value={g}>{g}</option>)}
          </select>
        </div>
        <div>
          <div className="text-xs text-gray-600 dark:text-slate-400">Subject</div>
          <select value={subjectFilter} onChange={(e) => setSubjectFilter(e.target.value)} className="rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 px-3 py-2 text-sm">
            {subjectOptions.map(s => <option key={s} value={s}>{s === 'all' ? 'All' : s}</option>)}
          </select>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {filtered.map((t, idx) => {
          const key = `${t.grade}-${t.subject}-${t.title}`
          const isReviewed = reviewed[key]
          const isIntegersModule = t.title === 'Integers - Complete Module'
          const isFractionsDecimalsModule = t.title === 'Fractions and Decimals - Complete Module'
          
          return (
            <div key={idx} className="rounded-xl border border-gray-200 dark:border-slate-800 bg-white/80 dark:bg-slate-900/60 p-4">
              <div className="flex items-center justify-between">
                <div>
                  <div className="text-xs text-gray-500 dark:text-slate-400">Grade {t.grade} • {t.subject}</div>
                  <div className="text-gray-900 dark:text-white font-semibold">{t.title}</div>
                </div>
                <button aria-label="Mark as reviewed" onClick={() => toggleReviewed(key)} className={`text-xs px-2 py-1 rounded-md border ${isReviewed ? 'bg-emerald-600 border-emerald-700 text-white' : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-700 text-gray-700 dark:text-slate-300'}`}>
                  {isReviewed ? 'Reviewed' : 'Mark reviewed'}
                </button>
              </div>
              <ul className="mt-3 list-disc pl-5 text-sm text-gray-700 dark:text-slate-300">
                {t.bullets.map((b, i) => <li key={i}>{b}</li>)}
              </ul>
              
              {/* Special button for Integers module */}
              {isIntegersModule && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startIntegersModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}
              
              {/* Special button for Word Processor Tables module */}
              {t.title === 'Word Processor – Tabular Presentation - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startWordProcessorTablesModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}
              
              {/* Special button for Fractions and Decimals module */}
              {isFractionsDecimalsModule && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startFractionsDecimalsModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}
              
              {/* Special button for Advanced Fractions and Decimals module (Grade 7) */}
              {t.title === 'Fractions and Decimals - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startAdvancedFractionsDecimalsModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Electricity and Circuits module */}
              {t.title === 'Electricity and Circuits - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startElectricityCircuitsModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Our Body and Health module */}
              {t.title === 'Our Body and Health - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startBodyHealthModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Microsoft PowerPoint module */}
              {t.title === 'Microsoft PowerPoint - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startPowerpointModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Motion and Time module */}
              {t.title === 'Motion and Time - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startMotionTimeModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Electric Current and Circuits module */}
              {t.title === 'Electric Current and Circuits - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startElectricCurrentCircuitsModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Heat module */}
              {t.title === 'Heat - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startHeatModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Life Processes module */}
              {t.title === 'Life Processes - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startLifeProcessesModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Nutrition in Animals and Plants module */}
              {t.title === 'Nutrition in Animals and Plants - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startNutritionAnimalsPlantModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}

              {/* Special button for Respiration and Circulation module */}
              {t.title === 'Respiration and Circulation - Complete Module' && (
                <div className="mt-4 pt-4 border-t border-gray-200 dark:border-slate-700">
                  <button
                    onClick={startRespirationCirculationModule}
                    className="w-full py-3 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white rounded-lg font-medium transition-all duration-200 transform hover:scale-105 flex items-center justify-center gap-2"
                  >
                    <span>🚀</span>
                    <span>Start Complete Learning Module</span>
                  </button>
                  <p className="text-xs text-gray-500 dark:text-slate-400 text-center mt-2">
                    Interactive lessons + MCQs + Self-checking
                  </p>
                </div>
              )}
            </div>
          )
        })}
      </div>

      <div className="rounded-xl border border-gray-200 dark:border-slate-800 bg-white/80 dark:bg-slate-900/60 p-4">
        <div className="text-gray-900 dark:text-white font-semibold mb-2">FAQs</div>
        {subjectFilter === 'all' ? (
          <div className="text-sm text-gray-700 dark:text-slate-300">Select a subject to view grade-specific FAQs.</div>
        ) : (
          <div className="divide-y divide-gray-200 dark:divide-slate-800">
            {faqsForSelection.map((f, i) => (
              <details key={i} className="py-2">
                <summary className="cursor-pointer text-sm font-medium text-gray-800 dark:text-slate-200">{f.q}</summary>
                <div className="mt-1 text-sm text-gray-700 dark:text-slate-300">{f.a}</div>
              </details>
            ))}
            {faqsForSelection.length === 0 && (
              <div className="text-sm text-gray-700 dark:text-slate-300 py-2">FAQs will appear here for the selected grade and subject.</div>
            )}
          </div>
        )}
      </div>
    </div>
  )
}


